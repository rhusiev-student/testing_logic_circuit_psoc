ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPIM_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	SPIM_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	SPIM_Enable, %function
  25              	SPIM_Enable:
  26              	.LFB3:
  27              		.file 1 "Generated_Source\\PSoC4\\SPIM.c"
   1:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/SPIM.c **** * File Name: SPIM.c
   3:Generated_Source\PSoC4/SPIM.c **** * Version 2.50
   4:Generated_Source\PSoC4/SPIM.c **** *
   5:Generated_Source\PSoC4/SPIM.c **** * Description:
   6:Generated_Source\PSoC4/SPIM.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC4/SPIM.c **** *
   8:Generated_Source\PSoC4/SPIM.c **** * Note:
   9:Generated_Source\PSoC4/SPIM.c **** *  None.
  10:Generated_Source\PSoC4/SPIM.c **** *
  11:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
  12:Generated_Source\PSoC4/SPIM.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/SPIM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/SPIM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/SPIM.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/SPIM.c **** 
  18:Generated_Source\PSoC4/SPIM.c **** #include "SPIM_PVT.h"
  19:Generated_Source\PSoC4/SPIM.c **** 
  20:Generated_Source\PSoC4/SPIM.c **** #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC4/SPIM.c ****     volatile uint16 SPIM_txBuffer[SPIM_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferFull;
  23:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferRead;
  24:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferWrite;
  25:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC4/SPIM.c **** 
  27:Generated_Source\PSoC4/SPIM.c **** #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC4/SPIM.c ****     volatile uint16 SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferFull;
  30:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferRead;
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 2


  31:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferWrite;
  32:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC4/SPIM.c **** 
  34:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_initVar = 0u;
  35:Generated_Source\PSoC4/SPIM.c **** 
  36:Generated_Source\PSoC4/SPIM.c **** volatile uint8 SPIM_swStatusTx;
  37:Generated_Source\PSoC4/SPIM.c **** volatile uint8 SPIM_swStatusRx;
  38:Generated_Source\PSoC4/SPIM.c **** 
  39:Generated_Source\PSoC4/SPIM.c **** 
  40:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
  41:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Init
  42:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
  43:Generated_Source\PSoC4/SPIM.c **** *
  44:Generated_Source\PSoC4/SPIM.c **** * Summary:
  45:Generated_Source\PSoC4/SPIM.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC4/SPIM.c **** *
  47:Generated_Source\PSoC4/SPIM.c **** * Parameters:
  48:Generated_Source\PSoC4/SPIM.c **** *  None.
  49:Generated_Source\PSoC4/SPIM.c **** *
  50:Generated_Source\PSoC4/SPIM.c **** * Return:
  51:Generated_Source\PSoC4/SPIM.c **** *  None.
  52:Generated_Source\PSoC4/SPIM.c **** *
  53:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
  54:Generated_Source\PSoC4/SPIM.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC4/SPIM.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC4/SPIM.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC4/SPIM.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC4/SPIM.c **** *
  59:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
  60:Generated_Source\PSoC4/SPIM.c **** *  No.
  61:Generated_Source\PSoC4/SPIM.c **** *
  62:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/SPIM.c **** void SPIM_Init(void) 
  64:Generated_Source\PSoC4/SPIM.c **** {
  65:Generated_Source\PSoC4/SPIM.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC4/SPIM.c ****     SPIM_COUNTER_PERIOD_REG = SPIM_BITCTR_INIT;
  67:Generated_Source\PSoC4/SPIM.c **** 
  68:Generated_Source\PSoC4/SPIM.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable         (SPIM_TX_ISR_NUMBER);
  71:Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_TX_ISR_NUMBER,  SPIM_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_TX_ISR_NUMBER, &SPIM_TX_ISR);
  73:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC4/SPIM.c **** 
  75:Generated_Source\PSoC4/SPIM.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable         (SPIM_RX_ISR_NUMBER);
  78:Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_RX_ISR_NUMBER,  SPIM_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_RX_ISR_NUMBER, &SPIM_RX_ISR);
  80:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC4/SPIM.c **** 
  82:Generated_Source\PSoC4/SPIM.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC4/SPIM.c ****     SPIM_ClearFIFO();
  84:Generated_Source\PSoC4/SPIM.c **** 
  85:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferFull  = 0u;
  87:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferRead  = 0u;
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 3


  88:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferWrite = 0u;
  89:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC4/SPIM.c **** 
  91:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferFull  = 0u;
  93:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferRead  = 0u;
  94:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferWrite = 0u;
  95:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC4/SPIM.c **** 
  97:Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  98:Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  99:Generated_Source\PSoC4/SPIM.c **** 
 100:Generated_Source\PSoC4/SPIM.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = SPIM_TX_INIT_INTERRUPTS_MASK;
 102:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
 103:Generated_Source\PSoC4/SPIM.c **** }
 104:Generated_Source\PSoC4/SPIM.c **** 
 105:Generated_Source\PSoC4/SPIM.c **** 
 106:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 107:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Enable
 108:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 109:Generated_Source\PSoC4/SPIM.c **** *
 110:Generated_Source\PSoC4/SPIM.c **** * Summary:
 111:Generated_Source\PSoC4/SPIM.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC4/SPIM.c **** *
 113:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 114:Generated_Source\PSoC4/SPIM.c **** *  None.
 115:Generated_Source\PSoC4/SPIM.c **** *
 116:Generated_Source\PSoC4/SPIM.c **** * Return:
 117:Generated_Source\PSoC4/SPIM.c **** *  None.
 118:Generated_Source\PSoC4/SPIM.c **** *
 119:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 120:Generated_Source\PSoC4/SPIM.c **** void SPIM_Enable(void) 
 121:Generated_Source\PSoC4/SPIM.c **** {
  28              		.loc 1 121 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 122:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC4/SPIM.c **** 
 124:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 124 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 125:Generated_Source\PSoC4/SPIM.c ****     SPIM_COUNTER_CONTROL_REG |= SPIM_CNTR_ENABLE;
  39              		.loc 1 125 0
  40 0006 0B4A     		ldr	r2, .L2
  41 0008 1178     		ldrb	r1, [r2]
  42 000a 2023     		movs	r3, #32
  43 000c 0B43     		orrs	r3, r1
  44 000e DBB2     		uxtb	r3, r3
  45 0010 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 4


  46              		.loc 1 126 0
  47 0012 0949     		ldr	r1, .L2+4
  48 0014 0A78     		ldrb	r2, [r1]
  49 0016 1023     		movs	r3, #16
  50 0018 1A43     		orrs	r2, r3
  51 001a D2B2     		uxtb	r2, r2
  52 001c 0A70     		strb	r2, [r1]
 127:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
  53              		.loc 1 127 0
  54 001e 074A     		ldr	r2, .L2+8
  55 0020 1178     		ldrb	r1, [r2]
  56 0022 0B43     		orrs	r3, r1
  57 0024 DBB2     		uxtb	r3, r3
  58 0026 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
  59              		.loc 1 128 0
  60 0028 FFF7FEFF 		bl	CyExitCriticalSection
  61              	.LVL1:
 129:Generated_Source\PSoC4/SPIM.c **** 
 130:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 131:Generated_Source\PSoC4/SPIM.c ****         SPIM_IntClock_Enable();
  62              		.loc 1 131 0
  63 002c FF20     		movs	r0, #255
  64 002e FFF7FEFF 		bl	SPIM_IntClock_StartEx
  65              	.LVL2:
 132:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC4/SPIM.c **** 
 134:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableTxInt();
 135:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableRxInt();
 136:Generated_Source\PSoC4/SPIM.c **** }
  66              		.loc 1 136 0
  67              		@ sp needed
  68 0032 10BD     		pop	{r4, pc}
  69              	.L3:
  70              		.align	2
  71              	.L2:
  72 0034 92000F40 		.word	1074725010
  73 0038 91000F40 		.word	1074725009
  74 003c 93000F40 		.word	1074725011
  75              		.cfi_endproc
  76              	.LFE3:
  77              		.size	SPIM_Enable, .-SPIM_Enable
  78              		.section	.text.SPIM_Stop,"ax",%progbits
  79              		.align	2
  80              		.global	SPIM_Stop
  81              		.code	16
  82              		.thumb_func
  83              		.type	SPIM_Stop, %function
  84              	SPIM_Stop:
  85              	.LFB5:
 137:Generated_Source\PSoC4/SPIM.c **** 
 138:Generated_Source\PSoC4/SPIM.c **** 
 139:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 140:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Start
 141:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 142:Generated_Source\PSoC4/SPIM.c **** *
 143:Generated_Source\PSoC4/SPIM.c **** * Summary:
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 5


 144:Generated_Source\PSoC4/SPIM.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC4/SPIM.c **** *
 146:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 147:Generated_Source\PSoC4/SPIM.c **** *  None.
 148:Generated_Source\PSoC4/SPIM.c **** *
 149:Generated_Source\PSoC4/SPIM.c **** * Return:
 150:Generated_Source\PSoC4/SPIM.c **** *  None.
 151:Generated_Source\PSoC4/SPIM.c **** *
 152:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 153:Generated_Source\PSoC4/SPIM.c **** *  SPIM_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC4/SPIM.c **** *  first function call.
 155:Generated_Source\PSoC4/SPIM.c **** *
 156:Generated_Source\PSoC4/SPIM.c **** * Theory:
 157:Generated_Source\PSoC4/SPIM.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC4/SPIM.c **** *
 159:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 160:Generated_Source\PSoC4/SPIM.c **** *  No.
 161:Generated_Source\PSoC4/SPIM.c **** *
 162:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 163:Generated_Source\PSoC4/SPIM.c **** void SPIM_Start(void) 
 164:Generated_Source\PSoC4/SPIM.c **** {
 165:Generated_Source\PSoC4/SPIM.c ****     if(0u == SPIM_initVar)
 166:Generated_Source\PSoC4/SPIM.c ****     {
 167:Generated_Source\PSoC4/SPIM.c ****         SPIM_Init();
 168:Generated_Source\PSoC4/SPIM.c ****         SPIM_initVar = 1u;
 169:Generated_Source\PSoC4/SPIM.c ****     }
 170:Generated_Source\PSoC4/SPIM.c **** 
 171:Generated_Source\PSoC4/SPIM.c ****     SPIM_Enable();
 172:Generated_Source\PSoC4/SPIM.c **** }
 173:Generated_Source\PSoC4/SPIM.c **** 
 174:Generated_Source\PSoC4/SPIM.c **** 
 175:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 176:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Stop
 177:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 178:Generated_Source\PSoC4/SPIM.c **** *
 179:Generated_Source\PSoC4/SPIM.c **** * Summary:
 180:Generated_Source\PSoC4/SPIM.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC4/SPIM.c **** *
 182:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 183:Generated_Source\PSoC4/SPIM.c **** *  None.
 184:Generated_Source\PSoC4/SPIM.c **** *
 185:Generated_Source\PSoC4/SPIM.c **** * Return:
 186:Generated_Source\PSoC4/SPIM.c **** *  None.
 187:Generated_Source\PSoC4/SPIM.c **** *
 188:Generated_Source\PSoC4/SPIM.c **** * Theory:
 189:Generated_Source\PSoC4/SPIM.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC4/SPIM.c **** *
 191:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 192:Generated_Source\PSoC4/SPIM.c **** void SPIM_Stop(void) 
 193:Generated_Source\PSoC4/SPIM.c **** {
  86              		.loc 1 193 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90 0000 10B5     		push	{r4, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 4, -8
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 6


  93              		.cfi_offset 14, -4
 194:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC4/SPIM.c **** 
 196:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
  94              		.loc 1 196 0
  95 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  96              	.LVL3:
 197:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
  97              		.loc 1 197 0
  98 0006 074A     		ldr	r2, .L5
  99 0008 1378     		ldrb	r3, [r2]
 100 000a 1021     		movs	r1, #16
 101 000c 8B43     		bics	r3, r1
 102 000e 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 103              		.loc 1 198 0
 104 0010 054A     		ldr	r2, .L5+4
 105 0012 1378     		ldrb	r3, [r2]
 106 0014 8B43     		bics	r3, r1
 107 0016 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 108              		.loc 1 199 0
 109 0018 FFF7FEFF 		bl	CyExitCriticalSection
 110              	.LVL4:
 200:Generated_Source\PSoC4/SPIM.c **** 
 201:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 202:Generated_Source\PSoC4/SPIM.c ****         SPIM_IntClock_Disable();
 111              		.loc 1 202 0
 112 001c FFF7FEFF 		bl	SPIM_IntClock_Stop
 113              	.LVL5:
 203:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC4/SPIM.c **** 
 205:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableTxInt();
 206:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableRxInt();
 207:Generated_Source\PSoC4/SPIM.c **** }
 114              		.loc 1 207 0
 115              		@ sp needed
 116 0020 10BD     		pop	{r4, pc}
 117              	.L6:
 118 0022 C046     		.align	2
 119              	.L5:
 120 0024 91000F40 		.word	1074725009
 121 0028 93000F40 		.word	1074725011
 122              		.cfi_endproc
 123              	.LFE5:
 124              		.size	SPIM_Stop, .-SPIM_Stop
 125              		.section	.text.SPIM_EnableTxInt,"ax",%progbits
 126              		.align	2
 127              		.global	SPIM_EnableTxInt
 128              		.code	16
 129              		.thumb_func
 130              		.type	SPIM_EnableTxInt, %function
 131              	SPIM_EnableTxInt:
 132              	.LFB6:
 208:Generated_Source\PSoC4/SPIM.c **** 
 209:Generated_Source\PSoC4/SPIM.c **** 
 210:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 7


 211:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableTxInt
 212:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 213:Generated_Source\PSoC4/SPIM.c **** *
 214:Generated_Source\PSoC4/SPIM.c **** * Summary:
 215:Generated_Source\PSoC4/SPIM.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC4/SPIM.c **** *
 217:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 218:Generated_Source\PSoC4/SPIM.c **** *  None.
 219:Generated_Source\PSoC4/SPIM.c **** *
 220:Generated_Source\PSoC4/SPIM.c **** * Return:
 221:Generated_Source\PSoC4/SPIM.c **** *  None.
 222:Generated_Source\PSoC4/SPIM.c **** *
 223:Generated_Source\PSoC4/SPIM.c **** * Theory:
 224:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC4/SPIM.c **** *
 226:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 227:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableTxInt(void) 
 228:Generated_Source\PSoC4/SPIM.c **** {
 133              		.loc 1 228 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 229:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC4/SPIM.c ****         CyIntEnable(SPIM_TX_ISR_NUMBER);
 231:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC4/SPIM.c **** }
 138              		.loc 1 232 0
 139              		@ sp needed
 140 0000 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE6:
 143              		.size	SPIM_EnableTxInt, .-SPIM_EnableTxInt
 144 0002 C046     		.section	.text.SPIM_EnableRxInt,"ax",%progbits
 145              		.align	2
 146              		.global	SPIM_EnableRxInt
 147              		.code	16
 148              		.thumb_func
 149              		.type	SPIM_EnableRxInt, %function
 150              	SPIM_EnableRxInt:
 151              	.LFB7:
 233:Generated_Source\PSoC4/SPIM.c **** 
 234:Generated_Source\PSoC4/SPIM.c **** 
 235:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 236:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableRxInt
 237:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 238:Generated_Source\PSoC4/SPIM.c **** *
 239:Generated_Source\PSoC4/SPIM.c **** * Summary:
 240:Generated_Source\PSoC4/SPIM.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC4/SPIM.c **** *
 242:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 243:Generated_Source\PSoC4/SPIM.c **** *  None.
 244:Generated_Source\PSoC4/SPIM.c **** *
 245:Generated_Source\PSoC4/SPIM.c **** * Return:
 246:Generated_Source\PSoC4/SPIM.c **** *  None.
 247:Generated_Source\PSoC4/SPIM.c **** *
 248:Generated_Source\PSoC4/SPIM.c **** * Theory:
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 8


 249:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC4/SPIM.c **** *
 251:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 252:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableRxInt(void) 
 253:Generated_Source\PSoC4/SPIM.c **** {
 152              		.loc 1 253 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 254:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC4/SPIM.c ****         CyIntEnable(SPIM_RX_ISR_NUMBER);
 256:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC4/SPIM.c **** }
 157              		.loc 1 257 0
 158              		@ sp needed
 159 0000 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE7:
 162              		.size	SPIM_EnableRxInt, .-SPIM_EnableRxInt
 163 0002 C046     		.section	.text.SPIM_DisableTxInt,"ax",%progbits
 164              		.align	2
 165              		.global	SPIM_DisableTxInt
 166              		.code	16
 167              		.thumb_func
 168              		.type	SPIM_DisableTxInt, %function
 169              	SPIM_DisableTxInt:
 170              	.LFB8:
 258:Generated_Source\PSoC4/SPIM.c **** 
 259:Generated_Source\PSoC4/SPIM.c **** 
 260:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 261:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableTxInt
 262:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 263:Generated_Source\PSoC4/SPIM.c **** *
 264:Generated_Source\PSoC4/SPIM.c **** * Summary:
 265:Generated_Source\PSoC4/SPIM.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC4/SPIM.c **** *
 267:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 268:Generated_Source\PSoC4/SPIM.c **** *  None.
 269:Generated_Source\PSoC4/SPIM.c **** *
 270:Generated_Source\PSoC4/SPIM.c **** * Return:
 271:Generated_Source\PSoC4/SPIM.c **** *  None.
 272:Generated_Source\PSoC4/SPIM.c **** *
 273:Generated_Source\PSoC4/SPIM.c **** * Theory:
 274:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC4/SPIM.c **** *
 276:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 277:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableTxInt(void) 
 278:Generated_Source\PSoC4/SPIM.c **** {
 171              		.loc 1 278 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 279:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable(SPIM_TX_ISR_NUMBER);
 281:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 9


 282:Generated_Source\PSoC4/SPIM.c **** }
 176              		.loc 1 282 0
 177              		@ sp needed
 178 0000 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE8:
 181              		.size	SPIM_DisableTxInt, .-SPIM_DisableTxInt
 182 0002 C046     		.section	.text.SPIM_DisableRxInt,"ax",%progbits
 183              		.align	2
 184              		.global	SPIM_DisableRxInt
 185              		.code	16
 186              		.thumb_func
 187              		.type	SPIM_DisableRxInt, %function
 188              	SPIM_DisableRxInt:
 189              	.LFB9:
 283:Generated_Source\PSoC4/SPIM.c **** 
 284:Generated_Source\PSoC4/SPIM.c **** 
 285:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 286:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableRxInt
 287:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 288:Generated_Source\PSoC4/SPIM.c **** *
 289:Generated_Source\PSoC4/SPIM.c **** * Summary:
 290:Generated_Source\PSoC4/SPIM.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC4/SPIM.c **** *
 292:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 293:Generated_Source\PSoC4/SPIM.c **** *  None.
 294:Generated_Source\PSoC4/SPIM.c **** *
 295:Generated_Source\PSoC4/SPIM.c **** * Return:
 296:Generated_Source\PSoC4/SPIM.c **** *  None.
 297:Generated_Source\PSoC4/SPIM.c **** *
 298:Generated_Source\PSoC4/SPIM.c **** * Theory:
 299:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC4/SPIM.c **** *
 301:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 302:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableRxInt(void) 
 303:Generated_Source\PSoC4/SPIM.c **** {
 190              		.loc 1 303 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 304:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable(SPIM_RX_ISR_NUMBER);
 306:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC4/SPIM.c **** }
 195              		.loc 1 307 0
 196              		@ sp needed
 197 0000 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE9:
 200              		.size	SPIM_DisableRxInt, .-SPIM_DisableRxInt
 201 0002 C046     		.section	.text.SPIM_SetTxInterruptMode,"ax",%progbits
 202              		.align	2
 203              		.global	SPIM_SetTxInterruptMode
 204              		.code	16
 205              		.thumb_func
 206              		.type	SPIM_SetTxInterruptMode, %function
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 10


 207              	SPIM_SetTxInterruptMode:
 208              	.LFB10:
 308:Generated_Source\PSoC4/SPIM.c **** 
 309:Generated_Source\PSoC4/SPIM.c **** 
 310:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 311:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetTxInterruptMode
 312:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 313:Generated_Source\PSoC4/SPIM.c **** *
 314:Generated_Source\PSoC4/SPIM.c **** * Summary:
 315:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC4/SPIM.c **** *
 317:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 318:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC4/SPIM.c **** *  header file).
 320:Generated_Source\PSoC4/SPIM.c **** *
 321:Generated_Source\PSoC4/SPIM.c **** * Return:
 322:Generated_Source\PSoC4/SPIM.c **** *  None.
 323:Generated_Source\PSoC4/SPIM.c **** *
 324:Generated_Source\PSoC4/SPIM.c **** * Theory:
 325:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC4/SPIM.c **** *
 327:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 328:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC4/SPIM.c **** {
 209              		.loc 1 329 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214              	.LVL6:
 330:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = intSrc;
 215              		.loc 1 330 0
 216 0000 014B     		ldr	r3, .L12
 217 0002 1870     		strb	r0, [r3]
 331:Generated_Source\PSoC4/SPIM.c **** }
 218              		.loc 1 331 0
 219              		@ sp needed
 220 0004 7047     		bx	lr
 221              	.L13:
 222 0006 C046     		.align	2
 223              	.L12:
 224 0008 81000F40 		.word	1074724993
 225              		.cfi_endproc
 226              	.LFE10:
 227              		.size	SPIM_SetTxInterruptMode, .-SPIM_SetTxInterruptMode
 228              		.section	.text.SPIM_SetRxInterruptMode,"ax",%progbits
 229              		.align	2
 230              		.global	SPIM_SetRxInterruptMode
 231              		.code	16
 232              		.thumb_func
 233              		.type	SPIM_SetRxInterruptMode, %function
 234              	SPIM_SetRxInterruptMode:
 235              	.LFB11:
 332:Generated_Source\PSoC4/SPIM.c **** 
 333:Generated_Source\PSoC4/SPIM.c **** 
 334:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 335:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetRxInterruptMode
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 11


 336:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 337:Generated_Source\PSoC4/SPIM.c **** *
 338:Generated_Source\PSoC4/SPIM.c **** * Summary:
 339:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC4/SPIM.c **** *
 341:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 342:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC4/SPIM.c **** *  header file).
 344:Generated_Source\PSoC4/SPIM.c **** *
 345:Generated_Source\PSoC4/SPIM.c **** * Return:
 346:Generated_Source\PSoC4/SPIM.c **** *  None.
 347:Generated_Source\PSoC4/SPIM.c **** *
 348:Generated_Source\PSoC4/SPIM.c **** * Theory:
 349:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC4/SPIM.c **** *
 351:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 352:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC4/SPIM.c **** {
 236              		.loc 1 353 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 241              	.LVL7:
 354:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  = intSrc;
 242              		.loc 1 354 0
 243 0000 014B     		ldr	r3, .L15
 244 0002 1870     		strb	r0, [r3]
 355:Generated_Source\PSoC4/SPIM.c **** }
 245              		.loc 1 355 0
 246              		@ sp needed
 247 0004 7047     		bx	lr
 248              	.L16:
 249 0006 C046     		.align	2
 250              	.L15:
 251 0008 83000F40 		.word	1074724995
 252              		.cfi_endproc
 253              	.LFE11:
 254              		.size	SPIM_SetRxInterruptMode, .-SPIM_SetRxInterruptMode
 255              		.section	.text.SPIM_ReadTxStatus,"ax",%progbits
 256              		.align	2
 257              		.global	SPIM_ReadTxStatus
 258              		.code	16
 259              		.thumb_func
 260              		.type	SPIM_ReadTxStatus, %function
 261              	SPIM_ReadTxStatus:
 262              	.LFB12:
 356:Generated_Source\PSoC4/SPIM.c **** 
 357:Generated_Source\PSoC4/SPIM.c **** 
 358:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 359:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadTxStatus
 360:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 361:Generated_Source\PSoC4/SPIM.c **** *
 362:Generated_Source\PSoC4/SPIM.c **** * Summary:
 363:Generated_Source\PSoC4/SPIM.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC4/SPIM.c **** *
 365:Generated_Source\PSoC4/SPIM.c **** * Parameters:
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 12


 366:Generated_Source\PSoC4/SPIM.c **** *  None.
 367:Generated_Source\PSoC4/SPIM.c **** *
 368:Generated_Source\PSoC4/SPIM.c **** * Return:
 369:Generated_Source\PSoC4/SPIM.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC4/SPIM.c **** *
 371:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 372:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC4/SPIM.c **** *
 375:Generated_Source\PSoC4/SPIM.c **** * Theory:
 376:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC4/SPIM.c **** *  detection and flow control.
 378:Generated_Source\PSoC4/SPIM.c **** *
 379:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 380:Generated_Source\PSoC4/SPIM.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC4/SPIM.c **** *
 382:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 383:Generated_Source\PSoC4/SPIM.c **** *  No.
 384:Generated_Source\PSoC4/SPIM.c **** *
 385:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 386:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadTxStatus(void) 
 387:Generated_Source\PSoC4/SPIM.c **** {
 263              		.loc 1 387 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 388:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC4/SPIM.c **** 
 390:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 393:Generated_Source\PSoC4/SPIM.c **** 
 394:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 395:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = 0u;
 396:Generated_Source\PSoC4/SPIM.c **** 
 397:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 398:Generated_Source\PSoC4/SPIM.c **** 
 399:Generated_Source\PSoC4/SPIM.c ****     #else
 400:Generated_Source\PSoC4/SPIM.c **** 
 401:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_TX_STATUS_REG;
 268              		.loc 1 401 0
 269 0000 014B     		ldr	r3, .L18
 270 0002 1878     		ldrb	r0, [r3]
 271 0004 C0B2     		uxtb	r0, r0
 272              	.LVL8:
 402:Generated_Source\PSoC4/SPIM.c **** 
 403:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC4/SPIM.c **** 
 405:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 406:Generated_Source\PSoC4/SPIM.c **** }
 273              		.loc 1 406 0
 274              		@ sp needed
 275 0006 7047     		bx	lr
 276              	.L19:
 277              		.align	2
 278              	.L18:
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 13


 279 0008 61000F40 		.word	1074724961
 280              		.cfi_endproc
 281              	.LFE12:
 282              		.size	SPIM_ReadTxStatus, .-SPIM_ReadTxStatus
 283              		.section	.text.SPIM_ReadRxStatus,"ax",%progbits
 284              		.align	2
 285              		.global	SPIM_ReadRxStatus
 286              		.code	16
 287              		.thumb_func
 288              		.type	SPIM_ReadRxStatus, %function
 289              	SPIM_ReadRxStatus:
 290              	.LFB13:
 407:Generated_Source\PSoC4/SPIM.c **** 
 408:Generated_Source\PSoC4/SPIM.c **** 
 409:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadRxStatus
 411:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 412:Generated_Source\PSoC4/SPIM.c **** *
 413:Generated_Source\PSoC4/SPIM.c **** * Summary:
 414:Generated_Source\PSoC4/SPIM.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC4/SPIM.c **** *
 416:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 417:Generated_Source\PSoC4/SPIM.c **** *  None.
 418:Generated_Source\PSoC4/SPIM.c **** *
 419:Generated_Source\PSoC4/SPIM.c **** * Return:
 420:Generated_Source\PSoC4/SPIM.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC4/SPIM.c **** *
 422:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 423:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC4/SPIM.c **** *
 426:Generated_Source\PSoC4/SPIM.c **** * Theory:
 427:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC4/SPIM.c **** *  detection and flow control.
 429:Generated_Source\PSoC4/SPIM.c **** *
 430:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 431:Generated_Source\PSoC4/SPIM.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC4/SPIM.c **** *
 433:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 434:Generated_Source\PSoC4/SPIM.c **** *  No.
 435:Generated_Source\PSoC4/SPIM.c **** *
 436:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 437:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadRxStatus(void) 
 438:Generated_Source\PSoC4/SPIM.c **** {
 291              		.loc 1 438 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 439:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC4/SPIM.c **** 
 441:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 444:Generated_Source\PSoC4/SPIM.c **** 
 445:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 446:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusRx = 0u;
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 14


 447:Generated_Source\PSoC4/SPIM.c **** 
 448:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 449:Generated_Source\PSoC4/SPIM.c **** 
 450:Generated_Source\PSoC4/SPIM.c ****     #else
 451:Generated_Source\PSoC4/SPIM.c **** 
 452:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_RX_STATUS_REG;
 296              		.loc 1 452 0
 297 0000 014B     		ldr	r3, .L21
 298 0002 1878     		ldrb	r0, [r3]
 299 0004 C0B2     		uxtb	r0, r0
 300              	.LVL9:
 453:Generated_Source\PSoC4/SPIM.c **** 
 454:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC4/SPIM.c **** 
 456:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 457:Generated_Source\PSoC4/SPIM.c **** }
 301              		.loc 1 457 0
 302              		@ sp needed
 303 0006 7047     		bx	lr
 304              	.L22:
 305              		.align	2
 306              	.L21:
 307 0008 63000F40 		.word	1074724963
 308              		.cfi_endproc
 309              	.LFE13:
 310              		.size	SPIM_ReadRxStatus, .-SPIM_ReadRxStatus
 311              		.section	.text.SPIM_WriteTxData,"ax",%progbits
 312              		.align	2
 313              		.global	SPIM_WriteTxData
 314              		.code	16
 315              		.thumb_func
 316              		.type	SPIM_WriteTxData, %function
 317              	SPIM_WriteTxData:
 318              	.LFB14:
 458:Generated_Source\PSoC4/SPIM.c **** 
 459:Generated_Source\PSoC4/SPIM.c **** 
 460:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 461:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_WriteTxData
 462:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 463:Generated_Source\PSoC4/SPIM.c **** *
 464:Generated_Source\PSoC4/SPIM.c **** * Summary:
 465:Generated_Source\PSoC4/SPIM.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC4/SPIM.c **** *
 467:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 468:Generated_Source\PSoC4/SPIM.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC4/SPIM.c **** *
 470:Generated_Source\PSoC4/SPIM.c **** * Return:
 471:Generated_Source\PSoC4/SPIM.c **** *  None.
 472:Generated_Source\PSoC4/SPIM.c **** *
 473:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 474:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC4/SPIM.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC4/SPIM.c **** *  data to sending, modified every function call if TX Software Buffer is used.
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 15


 481:Generated_Source\PSoC4/SPIM.c **** *
 482:Generated_Source\PSoC4/SPIM.c **** * Theory:
 483:Generated_Source\PSoC4/SPIM.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC4/SPIM.c **** *
 485:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 486:Generated_Source\PSoC4/SPIM.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC4/SPIM.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC4/SPIM.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC4/SPIM.c **** *
 490:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 491:Generated_Source\PSoC4/SPIM.c **** *  No.
 492:Generated_Source\PSoC4/SPIM.c **** *
 493:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 494:Generated_Source\PSoC4/SPIM.c **** void SPIM_WriteTxData(uint16 txData) 
 495:Generated_Source\PSoC4/SPIM.c **** {
 319              		.loc 1 495 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 324              	.LVL10:
 325              	.L24:
 496:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC4/SPIM.c **** 
 498:Generated_Source\PSoC4/SPIM.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC4/SPIM.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC4/SPIM.c **** 
 501:Generated_Source\PSoC4/SPIM.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC4/SPIM.c ****         do
 503:Generated_Source\PSoC4/SPIM.c ****         {
 504:Generated_Source\PSoC4/SPIM.c ****             tmpTxBufferRead = SPIM_txBufferRead;
 505:Generated_Source\PSoC4/SPIM.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC4/SPIM.c ****             {
 507:Generated_Source\PSoC4/SPIM.c ****                 tmpTxBufferRead = (SPIM_TX_BUFFER_SIZE - 1u);
 508:Generated_Source\PSoC4/SPIM.c ****             }
 509:Generated_Source\PSoC4/SPIM.c ****             else
 510:Generated_Source\PSoC4/SPIM.c ****             {
 511:Generated_Source\PSoC4/SPIM.c ****                 tmpTxBufferRead--;
 512:Generated_Source\PSoC4/SPIM.c ****             }
 513:Generated_Source\PSoC4/SPIM.c **** 
 514:Generated_Source\PSoC4/SPIM.c ****         }while(tmpTxBufferRead == SPIM_txBufferWrite);
 515:Generated_Source\PSoC4/SPIM.c **** 
 516:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 518:Generated_Source\PSoC4/SPIM.c **** 
 519:Generated_Source\PSoC4/SPIM.c ****         tempStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 520:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = tempStatus;
 521:Generated_Source\PSoC4/SPIM.c **** 
 522:Generated_Source\PSoC4/SPIM.c **** 
 523:Generated_Source\PSoC4/SPIM.c ****         if((SPIM_txBufferRead == SPIM_txBufferWrite) &&
 524:Generated_Source\PSoC4/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC4/SPIM.c ****         {
 526:Generated_Source\PSoC4/SPIM.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC4/SPIM.c ****             CY_SET_REG16(SPIM_TXDATA_PTR, txData);
 528:Generated_Source\PSoC4/SPIM.c ****         }
 529:Generated_Source\PSoC4/SPIM.c ****         else
 530:Generated_Source\PSoC4/SPIM.c ****         {
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 16


 531:Generated_Source\PSoC4/SPIM.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC4/SPIM.c ****             SPIM_txBufferWrite++;
 533:Generated_Source\PSoC4/SPIM.c ****             if(SPIM_txBufferWrite >= SPIM_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC4/SPIM.c ****             {
 535:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferWrite = 0u;
 536:Generated_Source\PSoC4/SPIM.c ****             }
 537:Generated_Source\PSoC4/SPIM.c **** 
 538:Generated_Source\PSoC4/SPIM.c ****             if(SPIM_txBufferWrite == SPIM_txBufferRead)
 539:Generated_Source\PSoC4/SPIM.c ****             {
 540:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferRead++;
 541:Generated_Source\PSoC4/SPIM.c ****                 if(SPIM_txBufferRead >= SPIM_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC4/SPIM.c ****                 {
 543:Generated_Source\PSoC4/SPIM.c ****                     SPIM_txBufferRead = 0u;
 544:Generated_Source\PSoC4/SPIM.c ****                 }
 545:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferFull = 1u;
 546:Generated_Source\PSoC4/SPIM.c ****             }
 547:Generated_Source\PSoC4/SPIM.c **** 
 548:Generated_Source\PSoC4/SPIM.c ****             SPIM_txBuffer[SPIM_txBufferWrite] = txData;
 549:Generated_Source\PSoC4/SPIM.c **** 
 550:Generated_Source\PSoC4/SPIM.c ****             SPIM_TX_STATUS_MASK_REG |= SPIM_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC4/SPIM.c ****         }
 552:Generated_Source\PSoC4/SPIM.c **** 
 553:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 554:Generated_Source\PSoC4/SPIM.c **** 
 555:Generated_Source\PSoC4/SPIM.c ****     #else
 556:Generated_Source\PSoC4/SPIM.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC4/SPIM.c ****         while(0u == (SPIM_TX_STATUS_REG & SPIM_STS_TX_FIFO_NOT_FULL))
 326              		.loc 1 557 0 discriminator 1
 327 0000 034B     		ldr	r3, .L25
 328 0002 1B78     		ldrb	r3, [r3]
 329 0004 5B07     		lsls	r3, r3, #29
 330 0006 FBD5     		bpl	.L24
 558:Generated_Source\PSoC4/SPIM.c ****         {
 559:Generated_Source\PSoC4/SPIM.c ****         }
 560:Generated_Source\PSoC4/SPIM.c **** 
 561:Generated_Source\PSoC4/SPIM.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC4/SPIM.c ****         CY_SET_REG16(SPIM_TXDATA_PTR, txData);
 331              		.loc 1 562 0
 332 0008 024B     		ldr	r3, .L25+4
 333 000a 1880     		strh	r0, [r3]
 563:Generated_Source\PSoC4/SPIM.c **** 
 564:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC4/SPIM.c **** }
 334              		.loc 1 565 0
 335              		@ sp needed
 336 000c 7047     		bx	lr
 337              	.L26:
 338 000e C046     		.align	2
 339              	.L25:
 340 0010 61000F40 		.word	1074724961
 341 0014 84100F40 		.word	1074729092
 342              		.cfi_endproc
 343              	.LFE14:
 344              		.size	SPIM_WriteTxData, .-SPIM_WriteTxData
 345              		.section	.text.SPIM_ReadRxData,"ax",%progbits
 346              		.align	2
 347              		.global	SPIM_ReadRxData
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 17


 348              		.code	16
 349              		.thumb_func
 350              		.type	SPIM_ReadRxData, %function
 351              	SPIM_ReadRxData:
 352              	.LFB15:
 566:Generated_Source\PSoC4/SPIM.c **** 
 567:Generated_Source\PSoC4/SPIM.c **** 
 568:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadRxData
 570:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 571:Generated_Source\PSoC4/SPIM.c **** *
 572:Generated_Source\PSoC4/SPIM.c **** * Summary:
 573:Generated_Source\PSoC4/SPIM.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC4/SPIM.c **** *
 575:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 576:Generated_Source\PSoC4/SPIM.c **** *  None.
 577:Generated_Source\PSoC4/SPIM.c **** *
 578:Generated_Source\PSoC4/SPIM.c **** * Return:
 579:Generated_Source\PSoC4/SPIM.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC4/SPIM.c **** *
 581:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 582:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC4/SPIM.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC4/SPIM.c **** *  received data.
 589:Generated_Source\PSoC4/SPIM.c **** *
 590:Generated_Source\PSoC4/SPIM.c **** * Theory:
 591:Generated_Source\PSoC4/SPIM.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC4/SPIM.c **** *
 593:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 594:Generated_Source\PSoC4/SPIM.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC4/SPIM.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC4/SPIM.c **** *  ReadByte() function.
 597:Generated_Source\PSoC4/SPIM.c **** *
 598:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 599:Generated_Source\PSoC4/SPIM.c **** *  No.
 600:Generated_Source\PSoC4/SPIM.c **** *
 601:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 602:Generated_Source\PSoC4/SPIM.c **** uint16 SPIM_ReadRxData(void) 
 603:Generated_Source\PSoC4/SPIM.c **** {
 353              		.loc 1 603 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 604:Generated_Source\PSoC4/SPIM.c ****     uint16 rxData;
 605:Generated_Source\PSoC4/SPIM.c **** 
 606:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC4/SPIM.c **** 
 608:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 610:Generated_Source\PSoC4/SPIM.c **** 
 611:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_rxBufferRead != SPIM_rxBufferWrite)
 612:Generated_Source\PSoC4/SPIM.c ****         {
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 18


 613:Generated_Source\PSoC4/SPIM.c ****             if(0u == SPIM_rxBufferFull)
 614:Generated_Source\PSoC4/SPIM.c ****             {
 615:Generated_Source\PSoC4/SPIM.c ****                 SPIM_rxBufferRead++;
 616:Generated_Source\PSoC4/SPIM.c ****                 if(SPIM_rxBufferRead >= SPIM_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC4/SPIM.c ****                 {
 618:Generated_Source\PSoC4/SPIM.c ****                     SPIM_rxBufferRead = 0u;
 619:Generated_Source\PSoC4/SPIM.c ****                 }
 620:Generated_Source\PSoC4/SPIM.c ****             }
 621:Generated_Source\PSoC4/SPIM.c ****             else
 622:Generated_Source\PSoC4/SPIM.c ****             {
 623:Generated_Source\PSoC4/SPIM.c ****                 SPIM_rxBufferFull = 0u;
 624:Generated_Source\PSoC4/SPIM.c ****             }
 625:Generated_Source\PSoC4/SPIM.c ****         }
 626:Generated_Source\PSoC4/SPIM.c **** 
 627:Generated_Source\PSoC4/SPIM.c ****         rxData = SPIM_rxBuffer[SPIM_rxBufferRead];
 628:Generated_Source\PSoC4/SPIM.c **** 
 629:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 630:Generated_Source\PSoC4/SPIM.c **** 
 631:Generated_Source\PSoC4/SPIM.c ****     #else
 632:Generated_Source\PSoC4/SPIM.c **** 
 633:Generated_Source\PSoC4/SPIM.c ****         rxData = CY_GET_REG16(SPIM_RXDATA_PTR);
 358              		.loc 1 633 0
 359 0000 014B     		ldr	r3, .L28
 360 0002 1888     		ldrh	r0, [r3]
 361 0004 80B2     		uxth	r0, r0
 362              	.LVL11:
 634:Generated_Source\PSoC4/SPIM.c **** 
 635:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC4/SPIM.c **** 
 637:Generated_Source\PSoC4/SPIM.c ****     return(rxData);
 638:Generated_Source\PSoC4/SPIM.c **** }
 363              		.loc 1 638 0
 364              		@ sp needed
 365 0006 7047     		bx	lr
 366              	.L29:
 367              		.align	2
 368              	.L28:
 369 0008 A4100F40 		.word	1074729124
 370              		.cfi_endproc
 371              	.LFE15:
 372              		.size	SPIM_ReadRxData, .-SPIM_ReadRxData
 373              		.section	.text.SPIM_GetRxBufferSize,"ax",%progbits
 374              		.align	2
 375              		.global	SPIM_GetRxBufferSize
 376              		.code	16
 377              		.thumb_func
 378              		.type	SPIM_GetRxBufferSize, %function
 379              	SPIM_GetRxBufferSize:
 380              	.LFB16:
 639:Generated_Source\PSoC4/SPIM.c **** 
 640:Generated_Source\PSoC4/SPIM.c **** 
 641:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_GetRxBufferSize
 643:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 644:Generated_Source\PSoC4/SPIM.c **** *
 645:Generated_Source\PSoC4/SPIM.c **** * Summary:
 646:Generated_Source\PSoC4/SPIM.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 19


 647:Generated_Source\PSoC4/SPIM.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC4/SPIM.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC4/SPIM.c **** *
 650:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 651:Generated_Source\PSoC4/SPIM.c **** *  None.
 652:Generated_Source\PSoC4/SPIM.c **** *
 653:Generated_Source\PSoC4/SPIM.c **** * Return:
 654:Generated_Source\PSoC4/SPIM.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC4/SPIM.c **** *
 656:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 657:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC4/SPIM.c **** *
 662:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 663:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC4/SPIM.c **** *
 665:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 666:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_GetRxBufferSize(void) 
 667:Generated_Source\PSoC4/SPIM.c **** {
 381              		.loc 1 667 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 668:Generated_Source\PSoC4/SPIM.c ****     uint8 size;
 669:Generated_Source\PSoC4/SPIM.c **** 
 670:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC4/SPIM.c **** 
 672:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 674:Generated_Source\PSoC4/SPIM.c **** 
 675:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_rxBufferRead == SPIM_rxBufferWrite)
 676:Generated_Source\PSoC4/SPIM.c ****         {
 677:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 678:Generated_Source\PSoC4/SPIM.c ****         }
 679:Generated_Source\PSoC4/SPIM.c ****         else if(SPIM_rxBufferRead < SPIM_rxBufferWrite)
 680:Generated_Source\PSoC4/SPIM.c ****         {
 681:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_rxBufferWrite - SPIM_rxBufferRead);
 682:Generated_Source\PSoC4/SPIM.c ****         }
 683:Generated_Source\PSoC4/SPIM.c ****         else
 684:Generated_Source\PSoC4/SPIM.c ****         {
 685:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_RX_BUFFER_SIZE - SPIM_rxBufferRead) + SPIM_rxBufferWrite;
 686:Generated_Source\PSoC4/SPIM.c ****         }
 687:Generated_Source\PSoC4/SPIM.c **** 
 688:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 689:Generated_Source\PSoC4/SPIM.c **** 
 690:Generated_Source\PSoC4/SPIM.c ****     #else
 691:Generated_Source\PSoC4/SPIM.c **** 
 692:Generated_Source\PSoC4/SPIM.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC4/SPIM.c ****         size = (0u != (SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 386              		.loc 1 693 0
 387 0000 034B     		ldr	r3, .L33
 388 0002 1B78     		ldrb	r3, [r3]
 389 0004 9B06     		lsls	r3, r3, #26
 390 0006 01D5     		bpl	.L32
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 20


 391 0008 0120     		movs	r0, #1
 392 000a 00E0     		b	.L31
 393              	.L32:
 394 000c 0020     		movs	r0, #0
 395              	.L31:
 396              	.LVL12:
 694:Generated_Source\PSoC4/SPIM.c **** 
 695:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC4/SPIM.c **** 
 697:Generated_Source\PSoC4/SPIM.c ****     return(size);
 698:Generated_Source\PSoC4/SPIM.c **** }
 397              		.loc 1 698 0 discriminator 4
 398              		@ sp needed
 399 000e 7047     		bx	lr
 400              	.L34:
 401              		.align	2
 402              	.L33:
 403 0010 63000F40 		.word	1074724963
 404              		.cfi_endproc
 405              	.LFE16:
 406              		.size	SPIM_GetRxBufferSize, .-SPIM_GetRxBufferSize
 407              		.section	.text.SPIM_GetTxBufferSize,"ax",%progbits
 408              		.align	2
 409              		.global	SPIM_GetTxBufferSize
 410              		.code	16
 411              		.thumb_func
 412              		.type	SPIM_GetTxBufferSize, %function
 413              	SPIM_GetTxBufferSize:
 414              	.LFB17:
 699:Generated_Source\PSoC4/SPIM.c **** 
 700:Generated_Source\PSoC4/SPIM.c **** 
 701:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 702:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_GetTxBufferSize
 703:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 704:Generated_Source\PSoC4/SPIM.c **** *
 705:Generated_Source\PSoC4/SPIM.c **** * Summary:
 706:Generated_Source\PSoC4/SPIM.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC4/SPIM.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC4/SPIM.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC4/SPIM.c **** *  Software Buffer.
 710:Generated_Source\PSoC4/SPIM.c **** *
 711:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 712:Generated_Source\PSoC4/SPIM.c **** *  None.
 713:Generated_Source\PSoC4/SPIM.c **** *
 714:Generated_Source\PSoC4/SPIM.c **** * Return:
 715:Generated_Source\PSoC4/SPIM.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC4/SPIM.c **** *
 717:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 718:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC4/SPIM.c **** *
 723:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 724:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC4/SPIM.c **** *
 726:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 21


 727:Generated_Source\PSoC4/SPIM.c **** uint8  SPIM_GetTxBufferSize(void) 
 728:Generated_Source\PSoC4/SPIM.c **** {
 415              		.loc 1 728 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 729:Generated_Source\PSoC4/SPIM.c ****     uint8 size;
 730:Generated_Source\PSoC4/SPIM.c **** 
 731:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 734:Generated_Source\PSoC4/SPIM.c **** 
 735:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_txBufferRead == SPIM_txBufferWrite)
 736:Generated_Source\PSoC4/SPIM.c ****         {
 737:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 738:Generated_Source\PSoC4/SPIM.c ****         }
 739:Generated_Source\PSoC4/SPIM.c ****         else if(SPIM_txBufferRead < SPIM_txBufferWrite)
 740:Generated_Source\PSoC4/SPIM.c ****         {
 741:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_txBufferWrite - SPIM_txBufferRead);
 742:Generated_Source\PSoC4/SPIM.c ****         }
 743:Generated_Source\PSoC4/SPIM.c ****         else
 744:Generated_Source\PSoC4/SPIM.c ****         {
 745:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_TX_BUFFER_SIZE - SPIM_txBufferRead) + SPIM_txBufferWrite;
 746:Generated_Source\PSoC4/SPIM.c ****         }
 747:Generated_Source\PSoC4/SPIM.c **** 
 748:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 749:Generated_Source\PSoC4/SPIM.c **** 
 750:Generated_Source\PSoC4/SPIM.c ****     #else
 751:Generated_Source\PSoC4/SPIM.c **** 
 752:Generated_Source\PSoC4/SPIM.c ****         size = SPIM_TX_STATUS_REG;
 420              		.loc 1 752 0
 421 0000 064B     		ldr	r3, .L39
 422 0002 1B78     		ldrb	r3, [r3]
 423 0004 DBB2     		uxtb	r3, r3
 424              	.LVL13:
 753:Generated_Source\PSoC4/SPIM.c **** 
 754:Generated_Source\PSoC4/SPIM.c ****         if(0u != (size & SPIM_STS_TX_FIFO_EMPTY))
 425              		.loc 1 754 0
 426 0006 9A07     		lsls	r2, r3, #30
 427 0008 03D4     		bmi	.L37
 755:Generated_Source\PSoC4/SPIM.c ****         {
 756:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 757:Generated_Source\PSoC4/SPIM.c ****         }
 758:Generated_Source\PSoC4/SPIM.c ****         else if(0u != (size & SPIM_STS_TX_FIFO_NOT_FULL))
 428              		.loc 1 758 0
 429 000a 5B07     		lsls	r3, r3, #29
 430 000c 03D5     		bpl	.L38
 431              	.LVL14:
 759:Generated_Source\PSoC4/SPIM.c ****         {
 760:Generated_Source\PSoC4/SPIM.c ****             size = 1u;
 432              		.loc 1 760 0
 433 000e 0120     		movs	r0, #1
 434 0010 02E0     		b	.L36
 435              	.LVL15:
 436              	.L37:
 756:Generated_Source\PSoC4/SPIM.c ****         }
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 22


 437              		.loc 1 756 0
 438 0012 0020     		movs	r0, #0
 439 0014 00E0     		b	.L36
 440              	.LVL16:
 441              	.L38:
 761:Generated_Source\PSoC4/SPIM.c ****         }
 762:Generated_Source\PSoC4/SPIM.c ****         else
 763:Generated_Source\PSoC4/SPIM.c ****         {
 764:Generated_Source\PSoC4/SPIM.c ****             size = SPIM_FIFO_SIZE;
 442              		.loc 1 764 0
 443 0016 0420     		movs	r0, #4
 444              	.L36:
 445              	.LVL17:
 765:Generated_Source\PSoC4/SPIM.c ****         }
 766:Generated_Source\PSoC4/SPIM.c **** 
 767:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC4/SPIM.c **** 
 769:Generated_Source\PSoC4/SPIM.c ****     return(size);
 770:Generated_Source\PSoC4/SPIM.c **** }
 446              		.loc 1 770 0
 447              		@ sp needed
 448 0018 7047     		bx	lr
 449              	.L40:
 450 001a C046     		.align	2
 451              	.L39:
 452 001c 61000F40 		.word	1074724961
 453              		.cfi_endproc
 454              	.LFE17:
 455              		.size	SPIM_GetTxBufferSize, .-SPIM_GetTxBufferSize
 456              		.section	.text.SPIM_ClearRxBuffer,"ax",%progbits
 457              		.align	2
 458              		.global	SPIM_ClearRxBuffer
 459              		.code	16
 460              		.thumb_func
 461              		.type	SPIM_ClearRxBuffer, %function
 462              	SPIM_ClearRxBuffer:
 463              	.LFB18:
 771:Generated_Source\PSoC4/SPIM.c **** 
 772:Generated_Source\PSoC4/SPIM.c **** 
 773:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 774:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearRxBuffer
 775:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 776:Generated_Source\PSoC4/SPIM.c **** *
 777:Generated_Source\PSoC4/SPIM.c **** * Summary:
 778:Generated_Source\PSoC4/SPIM.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC4/SPIM.c **** *
 780:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 781:Generated_Source\PSoC4/SPIM.c **** *  None.
 782:Generated_Source\PSoC4/SPIM.c **** *
 783:Generated_Source\PSoC4/SPIM.c **** * Return:
 784:Generated_Source\PSoC4/SPIM.c **** *  None.
 785:Generated_Source\PSoC4/SPIM.c **** *
 786:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 787:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC4/SPIM.c **** *  call - resets to zero.
 790:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 23


 791:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC4/SPIM.c **** *  resets to zero.
 793:Generated_Source\PSoC4/SPIM.c **** *
 794:Generated_Source\PSoC4/SPIM.c **** * Theory:
 795:Generated_Source\PSoC4/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC4/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC4/SPIM.c **** *  remained in the RAM.
 798:Generated_Source\PSoC4/SPIM.c **** *
 799:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 800:Generated_Source\PSoC4/SPIM.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC4/SPIM.c **** *
 802:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 803:Generated_Source\PSoC4/SPIM.c **** *  No.
 804:Generated_Source\PSoC4/SPIM.c **** *
 805:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 806:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearRxBuffer(void) 
 807:Generated_Source\PSoC4/SPIM.c **** {
 464              		.loc 1 807 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 808:Generated_Source\PSoC4/SPIM.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 469              		.loc 1 809 0
 470 0000 01E0     		b	.L42
 471              	.L43:
 810:Generated_Source\PSoC4/SPIM.c ****     {
 811:Generated_Source\PSoC4/SPIM.c ****         (void) CY_GET_REG16(SPIM_RXDATA_PTR);
 472              		.loc 1 811 0
 473 0002 034B     		ldr	r3, .L44
 474 0004 1B88     		ldrh	r3, [r3]
 475              	.L42:
 809:Generated_Source\PSoC4/SPIM.c ****     {
 476              		.loc 1 809 0
 477 0006 034B     		ldr	r3, .L44+4
 478 0008 1B78     		ldrb	r3, [r3]
 479 000a 9B06     		lsls	r3, r3, #26
 480 000c F9D4     		bmi	.L43
 812:Generated_Source\PSoC4/SPIM.c ****     }
 813:Generated_Source\PSoC4/SPIM.c **** 
 814:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 817:Generated_Source\PSoC4/SPIM.c **** 
 818:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferFull  = 0u;
 819:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferRead  = 0u;
 820:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferWrite = 0u;
 821:Generated_Source\PSoC4/SPIM.c **** 
 822:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 823:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC4/SPIM.c **** }
 481              		.loc 1 824 0
 482              		@ sp needed
 483 000e 7047     		bx	lr
 484              	.L45:
 485              		.align	2
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 24


 486              	.L44:
 487 0010 A4100F40 		.word	1074729124
 488 0014 63000F40 		.word	1074724963
 489              		.cfi_endproc
 490              	.LFE18:
 491              		.size	SPIM_ClearRxBuffer, .-SPIM_ClearRxBuffer
 492              		.section	.text.SPIM_ClearTxBuffer,"ax",%progbits
 493              		.align	2
 494              		.global	SPIM_ClearTxBuffer
 495              		.code	16
 496              		.thumb_func
 497              		.type	SPIM_ClearTxBuffer, %function
 498              	SPIM_ClearTxBuffer:
 499              	.LFB19:
 825:Generated_Source\PSoC4/SPIM.c **** 
 826:Generated_Source\PSoC4/SPIM.c **** 
 827:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearTxBuffer
 829:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 830:Generated_Source\PSoC4/SPIM.c **** *
 831:Generated_Source\PSoC4/SPIM.c **** * Summary:
 832:Generated_Source\PSoC4/SPIM.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC4/SPIM.c **** *
 834:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 835:Generated_Source\PSoC4/SPIM.c **** *  None.
 836:Generated_Source\PSoC4/SPIM.c **** *
 837:Generated_Source\PSoC4/SPIM.c **** * Return:
 838:Generated_Source\PSoC4/SPIM.c **** *  None.
 839:Generated_Source\PSoC4/SPIM.c **** *
 840:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 841:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC4/SPIM.c **** *  call - resets to zero.
 844:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC4/SPIM.c **** *  resets to zero.
 847:Generated_Source\PSoC4/SPIM.c **** *
 848:Generated_Source\PSoC4/SPIM.c **** * Theory:
 849:Generated_Source\PSoC4/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC4/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC4/SPIM.c **** *  remained in the RAM.
 852:Generated_Source\PSoC4/SPIM.c **** *
 853:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 854:Generated_Source\PSoC4/SPIM.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC4/SPIM.c **** *  overwritten.
 856:Generated_Source\PSoC4/SPIM.c **** *
 857:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 858:Generated_Source\PSoC4/SPIM.c **** *  No.
 859:Generated_Source\PSoC4/SPIM.c **** *
 860:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 861:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearTxBuffer(void) 
 862:Generated_Source\PSoC4/SPIM.c **** {
 500              		.loc 1 862 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 25


 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 4, -8
 507              		.cfi_offset 14, -4
 863:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC4/SPIM.c **** 
 865:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 508              		.loc 1 865 0
 509 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 510              	.LVL18:
 866:Generated_Source\PSoC4/SPIM.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 511              		.loc 1 867 0
 512 0006 0A49     		ldr	r1, .L47
 513 0008 0A78     		ldrb	r2, [r1]
 514 000a 0124     		movs	r4, #1
 515 000c 0123     		movs	r3, #1
 516 000e 1A43     		orrs	r2, r3
 517 0010 D2B2     		uxtb	r2, r2
 518 0012 0A70     		strb	r2, [r1]
 868:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 519              		.loc 1 868 0
 520 0014 0A78     		ldrb	r2, [r1]
 521 0016 A243     		bics	r2, r4
 522 0018 0A70     		strb	r2, [r1]
 869:Generated_Source\PSoC4/SPIM.c **** 
 870:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC4/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 523              		.loc 1 872 0
 524 001a 064A     		ldr	r2, .L47+4
 525 001c 1178     		ldrb	r1, [r2]
 526 001e 0B43     		orrs	r3, r1
 527 0020 DBB2     		uxtb	r3, r3
 528 0022 1370     		strb	r3, [r2]
 873:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 529              		.loc 1 873 0
 530 0024 1378     		ldrb	r3, [r2]
 531 0026 A343     		bics	r3, r4
 532 0028 1370     		strb	r3, [r2]
 874:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 533              		.loc 1 875 0
 534 002a FFF7FEFF 		bl	CyExitCriticalSection
 535              	.LVL19:
 876:Generated_Source\PSoC4/SPIM.c **** 
 877:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 880:Generated_Source\PSoC4/SPIM.c **** 
 881:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferFull  = 0u;
 882:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferRead  = 0u;
 883:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferWrite = 0u;
 884:Generated_Source\PSoC4/SPIM.c **** 
 885:Generated_Source\PSoC4/SPIM.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC4/SPIM.c ****         SPIM_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC4/SPIM.c **** 
 888:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 26


 889:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC4/SPIM.c **** }
 536              		.loc 1 890 0
 537              		@ sp needed
 538 002e 10BD     		pop	{r4, pc}
 539              	.L48:
 540              		.align	2
 541              	.L47:
 542 0030 92000F40 		.word	1074725010
 543 0034 93000F40 		.word	1074725011
 544              		.cfi_endproc
 545              	.LFE19:
 546              		.size	SPIM_ClearTxBuffer, .-SPIM_ClearTxBuffer
 547              		.section	.text.SPIM_PutArray,"ax",%progbits
 548              		.align	2
 549              		.global	SPIM_PutArray
 550              		.code	16
 551              		.thumb_func
 552              		.type	SPIM_PutArray, %function
 553              	SPIM_PutArray:
 554              	.LFB20:
 891:Generated_Source\PSoC4/SPIM.c **** 
 892:Generated_Source\PSoC4/SPIM.c **** 
 893:Generated_Source\PSoC4/SPIM.c **** #if(0u != SPIM_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 895:Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_TxEnable
 896:Generated_Source\PSoC4/SPIM.c ****     ********************************************************************************
 897:Generated_Source\PSoC4/SPIM.c ****     *
 898:Generated_Source\PSoC4/SPIM.c ****     * Summary:
 899:Generated_Source\PSoC4/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC4/SPIM.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC4/SPIM.c ****     *
 902:Generated_Source\PSoC4/SPIM.c ****     * Parameters:
 903:Generated_Source\PSoC4/SPIM.c ****     *  None.
 904:Generated_Source\PSoC4/SPIM.c ****     *
 905:Generated_Source\PSoC4/SPIM.c ****     * Return:
 906:Generated_Source\PSoC4/SPIM.c ****     *  None.
 907:Generated_Source\PSoC4/SPIM.c ****     *
 908:Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 909:Generated_Source\PSoC4/SPIM.c ****     void SPIM_TxEnable(void) 
 910:Generated_Source\PSoC4/SPIM.c ****     {
 911:Generated_Source\PSoC4/SPIM.c ****         SPIM_CONTROL_REG |= SPIM_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC4/SPIM.c ****     }
 913:Generated_Source\PSoC4/SPIM.c **** 
 914:Generated_Source\PSoC4/SPIM.c **** 
 915:Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 916:Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_TxDisable
 917:Generated_Source\PSoC4/SPIM.c ****     ********************************************************************************
 918:Generated_Source\PSoC4/SPIM.c ****     *
 919:Generated_Source\PSoC4/SPIM.c ****     * Summary:
 920:Generated_Source\PSoC4/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC4/SPIM.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC4/SPIM.c ****     *
 923:Generated_Source\PSoC4/SPIM.c ****     * Parameters:
 924:Generated_Source\PSoC4/SPIM.c ****     *  None.
 925:Generated_Source\PSoC4/SPIM.c ****     *
 926:Generated_Source\PSoC4/SPIM.c ****     * Return:
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 27


 927:Generated_Source\PSoC4/SPIM.c ****     *  None.
 928:Generated_Source\PSoC4/SPIM.c ****     *
 929:Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 930:Generated_Source\PSoC4/SPIM.c ****     void SPIM_TxDisable(void) 
 931:Generated_Source\PSoC4/SPIM.c ****     {
 932:Generated_Source\PSoC4/SPIM.c ****         SPIM_CONTROL_REG &= ((uint8) ~SPIM_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC4/SPIM.c ****     }
 934:Generated_Source\PSoC4/SPIM.c **** 
 935:Generated_Source\PSoC4/SPIM.c **** #endif /* (0u != SPIM_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC4/SPIM.c **** 
 937:Generated_Source\PSoC4/SPIM.c **** 
 938:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 939:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_PutArray
 940:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 941:Generated_Source\PSoC4/SPIM.c **** *
 942:Generated_Source\PSoC4/SPIM.c **** * Summary:
 943:Generated_Source\PSoC4/SPIM.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC4/SPIM.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC4/SPIM.c **** *
 946:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 947:Generated_Source\PSoC4/SPIM.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC4/SPIM.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC4/SPIM.c **** *
 950:Generated_Source\PSoC4/SPIM.c **** * Return:
 951:Generated_Source\PSoC4/SPIM.c **** *  None.
 952:Generated_Source\PSoC4/SPIM.c **** *
 953:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 954:Generated_Source\PSoC4/SPIM.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC4/SPIM.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC4/SPIM.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC4/SPIM.c **** *
 958:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 959:Generated_Source\PSoC4/SPIM.c **** *  No.
 960:Generated_Source\PSoC4/SPIM.c **** *
 961:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 962:Generated_Source\PSoC4/SPIM.c **** void SPIM_PutArray(const uint16 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC4/SPIM.c ****                                                                           
 964:Generated_Source\PSoC4/SPIM.c **** {
 555              		.loc 1 964 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              	.LVL20:
 560 0000 70B5     		push	{r4, r5, r6, lr}
 561              		.cfi_def_cfa_offset 16
 562              		.cfi_offset 4, -16
 563              		.cfi_offset 5, -12
 564              		.cfi_offset 6, -8
 565              		.cfi_offset 14, -4
 566 0002 0600     		movs	r6, r0
 567 0004 0C00     		movs	r4, r1
 568              	.LVL21:
 965:Generated_Source\PSoC4/SPIM.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC4/SPIM.c **** 
 967:Generated_Source\PSoC4/SPIM.c ****     bufIndex = 0u;
 569              		.loc 1 967 0
 570 0006 0025     		movs	r5, #0
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 28


 968:Generated_Source\PSoC4/SPIM.c **** 
 969:Generated_Source\PSoC4/SPIM.c ****     while(byteCount > 0u)
 571              		.loc 1 969 0
 572 0008 07E0     		b	.L50
 573              	.LVL22:
 574              	.L51:
 970:Generated_Source\PSoC4/SPIM.c ****     {
 971:Generated_Source\PSoC4/SPIM.c ****         SPIM_WriteTxData(buffer[bufIndex]);
 575              		.loc 1 971 0
 576 000a 6B00     		lsls	r3, r5, #1
 577 000c F05A     		ldrh	r0, [r6, r3]
 578 000e FFF7FEFF 		bl	SPIM_WriteTxData
 579              	.LVL23:
 972:Generated_Source\PSoC4/SPIM.c ****         bufIndex++;
 580              		.loc 1 972 0
 581 0012 0135     		adds	r5, r5, #1
 582              	.LVL24:
 583 0014 EDB2     		uxtb	r5, r5
 584              	.LVL25:
 973:Generated_Source\PSoC4/SPIM.c ****         byteCount--;
 585              		.loc 1 973 0
 586 0016 013C     		subs	r4, r4, #1
 587              	.LVL26:
 588 0018 E4B2     		uxtb	r4, r4
 589              	.LVL27:
 590              	.L50:
 969:Generated_Source\PSoC4/SPIM.c ****     {
 591              		.loc 1 969 0
 592 001a 002C     		cmp	r4, #0
 593 001c F5D1     		bne	.L51
 974:Generated_Source\PSoC4/SPIM.c ****     }
 975:Generated_Source\PSoC4/SPIM.c **** }
 594              		.loc 1 975 0
 595              		@ sp needed
 596              	.LVL28:
 597              	.LVL29:
 598              	.LVL30:
 599 001e 70BD     		pop	{r4, r5, r6, pc}
 600              		.cfi_endproc
 601              	.LFE20:
 602              		.size	SPIM_PutArray, .-SPIM_PutArray
 603              		.section	.text.SPIM_ClearFIFO,"ax",%progbits
 604              		.align	2
 605              		.global	SPIM_ClearFIFO
 606              		.code	16
 607              		.thumb_func
 608              		.type	SPIM_ClearFIFO, %function
 609              	SPIM_ClearFIFO:
 610              	.LFB21:
 976:Generated_Source\PSoC4/SPIM.c **** 
 977:Generated_Source\PSoC4/SPIM.c **** 
 978:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearFIFO
 980:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 981:Generated_Source\PSoC4/SPIM.c **** *
 982:Generated_Source\PSoC4/SPIM.c **** * Summary:
 983:Generated_Source\PSoC4/SPIM.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 29


 984:Generated_Source\PSoC4/SPIM.c **** *
 985:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 986:Generated_Source\PSoC4/SPIM.c **** *  None.
 987:Generated_Source\PSoC4/SPIM.c **** *
 988:Generated_Source\PSoC4/SPIM.c **** * Return:
 989:Generated_Source\PSoC4/SPIM.c **** *  None.
 990:Generated_Source\PSoC4/SPIM.c **** *
 991:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 992:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC4/SPIM.c **** *
 994:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 995:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearFIFO(void) 
 996:Generated_Source\PSoC4/SPIM.c **** {
 611              		.loc 1 996 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615 0000 10B5     		push	{r4, lr}
 616              		.cfi_def_cfa_offset 8
 617              		.cfi_offset 4, -8
 618              		.cfi_offset 14, -4
 997:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC4/SPIM.c **** 
 999:Generated_Source\PSoC4/SPIM.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 619              		.loc 1 1000 0
 620 0002 01E0     		b	.L53
 621              	.L54:
1001:Generated_Source\PSoC4/SPIM.c ****     {
1002:Generated_Source\PSoC4/SPIM.c ****         (void) CY_GET_REG16(SPIM_RXDATA_PTR);
 622              		.loc 1 1002 0
 623 0004 0E4B     		ldr	r3, .L55
 624 0006 1B88     		ldrh	r3, [r3]
 625              	.L53:
1000:Generated_Source\PSoC4/SPIM.c ****     {
 626              		.loc 1 1000 0
 627 0008 0E4B     		ldr	r3, .L55+4
 628 000a 1B78     		ldrb	r3, [r3]
 629 000c 9B06     		lsls	r3, r3, #26
 630 000e F9D4     		bmi	.L54
1003:Generated_Source\PSoC4/SPIM.c ****     }
1004:Generated_Source\PSoC4/SPIM.c **** 
1005:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 631              		.loc 1 1005 0
 632 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 633              	.LVL31:
1006:Generated_Source\PSoC4/SPIM.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 634              		.loc 1 1007 0
 635 0014 0C49     		ldr	r1, .L55+8
 636 0016 0A78     		ldrb	r2, [r1]
 637 0018 0124     		movs	r4, #1
 638 001a 0123     		movs	r3, #1
 639 001c 1A43     		orrs	r2, r3
 640 001e D2B2     		uxtb	r2, r2
 641 0020 0A70     		strb	r2, [r1]
1008:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 30


 642              		.loc 1 1008 0
 643 0022 0A78     		ldrb	r2, [r1]
 644 0024 A243     		bics	r2, r4
 645 0026 0A70     		strb	r2, [r1]
1009:Generated_Source\PSoC4/SPIM.c **** 
1010:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC4/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 646              		.loc 1 1012 0
 647 0028 084A     		ldr	r2, .L55+12
 648 002a 1178     		ldrb	r1, [r2]
 649 002c 0B43     		orrs	r3, r1
 650 002e DBB2     		uxtb	r3, r3
 651 0030 1370     		strb	r3, [r2]
1013:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 652              		.loc 1 1013 0
 653 0032 1378     		ldrb	r3, [r2]
 654 0034 A343     		bics	r3, r4
 655 0036 1370     		strb	r3, [r2]
1014:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 656              		.loc 1 1015 0
 657 0038 FFF7FEFF 		bl	CyExitCriticalSection
 658              	.LVL32:
1016:Generated_Source\PSoC4/SPIM.c **** }
 659              		.loc 1 1016 0
 660              		@ sp needed
 661 003c 10BD     		pop	{r4, pc}
 662              	.L56:
 663 003e C046     		.align	2
 664              	.L55:
 665 0040 A4100F40 		.word	1074729124
 666 0044 63000F40 		.word	1074724963
 667 0048 92000F40 		.word	1074725010
 668 004c 93000F40 		.word	1074725011
 669              		.cfi_endproc
 670              	.LFE21:
 671              		.size	SPIM_ClearFIFO, .-SPIM_ClearFIFO
 672              		.section	.text.SPIM_Init,"ax",%progbits
 673              		.align	2
 674              		.global	SPIM_Init
 675              		.code	16
 676              		.thumb_func
 677              		.type	SPIM_Init, %function
 678              	SPIM_Init:
 679              	.LFB2:
  64:Generated_Source\PSoC4/SPIM.c ****     /* Initialize the Bit counter */
 680              		.loc 1 64 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684 0000 10B5     		push	{r4, lr}
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 4, -8
 687              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/SPIM.c **** 
 688              		.loc 1 66 0
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 31


 689 0002 1F22     		movs	r2, #31
 690 0004 064B     		ldr	r3, .L58
 691 0006 1A70     		strb	r2, [r3]
  83:Generated_Source\PSoC4/SPIM.c **** 
 692              		.loc 1 83 0
 693 0008 FFF7FEFF 		bl	SPIM_ClearFIFO
 694              	.LVL33:
  97:Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
 695              		.loc 1 97 0
 696 000c FFF7FEFF 		bl	SPIM_ReadTxStatus
 697              	.LVL34:
  98:Generated_Source\PSoC4/SPIM.c **** 
 698              		.loc 1 98 0
 699 0010 FFF7FEFF 		bl	SPIM_ReadRxStatus
 700              	.LVL35:
 101:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
 701              		.loc 1 101 0
 702 0014 0023     		movs	r3, #0
 703 0016 034A     		ldr	r2, .L58+4
 704 0018 1370     		strb	r3, [r2]
 102:Generated_Source\PSoC4/SPIM.c **** }
 705              		.loc 1 102 0
 706 001a 034A     		ldr	r2, .L58+8
 707 001c 1370     		strb	r3, [r2]
 103:Generated_Source\PSoC4/SPIM.c **** 
 708              		.loc 1 103 0
 709              		@ sp needed
 710 001e 10BD     		pop	{r4, pc}
 711              	.L59:
 712              		.align	2
 713              	.L58:
 714 0020 82000F40 		.word	1074724994
 715 0024 81000F40 		.word	1074724993
 716 0028 83000F40 		.word	1074724995
 717              		.cfi_endproc
 718              	.LFE2:
 719              		.size	SPIM_Init, .-SPIM_Init
 720              		.section	.text.SPIM_Start,"ax",%progbits
 721              		.align	2
 722              		.global	SPIM_Start
 723              		.code	16
 724              		.thumb_func
 725              		.type	SPIM_Start, %function
 726              	SPIM_Start:
 727              	.LFB4:
 164:Generated_Source\PSoC4/SPIM.c ****     if(0u == SPIM_initVar)
 728              		.loc 1 164 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732 0000 10B5     		push	{r4, lr}
 733              		.cfi_def_cfa_offset 8
 734              		.cfi_offset 4, -8
 735              		.cfi_offset 14, -4
 165:Generated_Source\PSoC4/SPIM.c ****     {
 736              		.loc 1 165 0
 737 0002 064B     		ldr	r3, .L62
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 32


 738 0004 1B78     		ldrb	r3, [r3]
 739 0006 002B     		cmp	r3, #0
 740 0008 04D1     		bne	.L61
 167:Generated_Source\PSoC4/SPIM.c ****         SPIM_initVar = 1u;
 741              		.loc 1 167 0
 742 000a FFF7FEFF 		bl	SPIM_Init
 743              	.LVL36:
 168:Generated_Source\PSoC4/SPIM.c ****     }
 744              		.loc 1 168 0
 745 000e 0122     		movs	r2, #1
 746 0010 024B     		ldr	r3, .L62
 747 0012 1A70     		strb	r2, [r3]
 748              	.L61:
 171:Generated_Source\PSoC4/SPIM.c **** }
 749              		.loc 1 171 0
 750 0014 FFF7FEFF 		bl	SPIM_Enable
 751              	.LVL37:
 172:Generated_Source\PSoC4/SPIM.c **** 
 752              		.loc 1 172 0
 753              		@ sp needed
 754 0018 10BD     		pop	{r4, pc}
 755              	.L63:
 756 001a C046     		.align	2
 757              	.L62:
 758 001c 00000000 		.word	.LANCHOR0
 759              		.cfi_endproc
 760              	.LFE4:
 761              		.size	SPIM_Start, .-SPIM_Start
 762              		.section	.text.SPIM_EnableInt,"ax",%progbits
 763              		.align	2
 764              		.global	SPIM_EnableInt
 765              		.code	16
 766              		.thumb_func
 767              		.type	SPIM_EnableInt, %function
 768              	SPIM_EnableInt:
 769              	.LFB22:
1017:Generated_Source\PSoC4/SPIM.c **** 
1018:Generated_Source\PSoC4/SPIM.c **** 
1019:Generated_Source\PSoC4/SPIM.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC4/SPIM.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC4/SPIM.c **** */
1022:Generated_Source\PSoC4/SPIM.c **** 
1023:Generated_Source\PSoC4/SPIM.c **** 
1024:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1025:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableInt
1026:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1027:Generated_Source\PSoC4/SPIM.c **** *
1028:Generated_Source\PSoC4/SPIM.c **** * Summary:
1029:Generated_Source\PSoC4/SPIM.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC4/SPIM.c **** *
1031:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1032:Generated_Source\PSoC4/SPIM.c **** *  None.
1033:Generated_Source\PSoC4/SPIM.c **** *
1034:Generated_Source\PSoC4/SPIM.c **** * Return:
1035:Generated_Source\PSoC4/SPIM.c **** *  None.
1036:Generated_Source\PSoC4/SPIM.c **** *
1037:Generated_Source\PSoC4/SPIM.c **** * Theory:
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 33


1038:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC4/SPIM.c **** *
1040:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1041:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableInt(void) 
1042:Generated_Source\PSoC4/SPIM.c **** {
 770              		.loc 1 1042 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
1043:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableRxInt();
1044:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableTxInt();
1045:Generated_Source\PSoC4/SPIM.c **** }
 775              		.loc 1 1045 0
 776              		@ sp needed
 777 0000 7047     		bx	lr
 778              		.cfi_endproc
 779              	.LFE22:
 780              		.size	SPIM_EnableInt, .-SPIM_EnableInt
 781 0002 C046     		.section	.text.SPIM_DisableInt,"ax",%progbits
 782              		.align	2
 783              		.global	SPIM_DisableInt
 784              		.code	16
 785              		.thumb_func
 786              		.type	SPIM_DisableInt, %function
 787              	SPIM_DisableInt:
 788              	.LFB23:
1046:Generated_Source\PSoC4/SPIM.c **** 
1047:Generated_Source\PSoC4/SPIM.c **** 
1048:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1049:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableInt
1050:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1051:Generated_Source\PSoC4/SPIM.c **** *
1052:Generated_Source\PSoC4/SPIM.c **** * Summary:
1053:Generated_Source\PSoC4/SPIM.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC4/SPIM.c **** *
1055:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1056:Generated_Source\PSoC4/SPIM.c **** *  None.
1057:Generated_Source\PSoC4/SPIM.c **** *
1058:Generated_Source\PSoC4/SPIM.c **** * Return:
1059:Generated_Source\PSoC4/SPIM.c **** *  None.
1060:Generated_Source\PSoC4/SPIM.c **** *
1061:Generated_Source\PSoC4/SPIM.c **** * Theory:
1062:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC4/SPIM.c **** *
1064:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1065:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableInt(void) 
1066:Generated_Source\PSoC4/SPIM.c **** {
 789              		.loc 1 1066 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
1067:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableTxInt();
1068:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableRxInt();
1069:Generated_Source\PSoC4/SPIM.c **** }
 794              		.loc 1 1069 0
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 34


 795              		@ sp needed
 796 0000 7047     		bx	lr
 797              		.cfi_endproc
 798              	.LFE23:
 799              		.size	SPIM_DisableInt, .-SPIM_DisableInt
 800 0002 C046     		.section	.text.SPIM_SetInterruptMode,"ax",%progbits
 801              		.align	2
 802              		.global	SPIM_SetInterruptMode
 803              		.code	16
 804              		.thumb_func
 805              		.type	SPIM_SetInterruptMode, %function
 806              	SPIM_SetInterruptMode:
 807              	.LFB24:
1070:Generated_Source\PSoC4/SPIM.c **** 
1071:Generated_Source\PSoC4/SPIM.c **** 
1072:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1073:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetInterruptMode
1074:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1075:Generated_Source\PSoC4/SPIM.c **** *
1076:Generated_Source\PSoC4/SPIM.c **** * Summary:
1077:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC4/SPIM.c **** *
1079:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1080:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC4/SPIM.c **** *  header file).
1082:Generated_Source\PSoC4/SPIM.c **** *
1083:Generated_Source\PSoC4/SPIM.c **** * Return:
1084:Generated_Source\PSoC4/SPIM.c **** *  None.
1085:Generated_Source\PSoC4/SPIM.c **** *
1086:Generated_Source\PSoC4/SPIM.c **** * Theory:
1087:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC4/SPIM.c **** *
1089:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1090:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC4/SPIM.c **** {
 808              		.loc 1 1091 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812              		@ link register save eliminated.
 813              	.LVL38:
1092:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_STS_SPI_IDLE));
 814              		.loc 1 1092 0
 815 0000 1023     		movs	r3, #16
 816 0002 0200     		movs	r2, r0
 817 0004 9A43     		bics	r2, r3
 818 0006 024B     		ldr	r3, .L67
 819 0008 1A70     		strb	r2, [r3]
1093:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  =  intSrc;
 820              		.loc 1 1093 0
 821 000a 024B     		ldr	r3, .L67+4
 822 000c 1870     		strb	r0, [r3]
1094:Generated_Source\PSoC4/SPIM.c **** }
 823              		.loc 1 1094 0
 824              		@ sp needed
 825 000e 7047     		bx	lr
 826              	.L68:
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 35


 827              		.align	2
 828              	.L67:
 829 0010 81000F40 		.word	1074724993
 830 0014 83000F40 		.word	1074724995
 831              		.cfi_endproc
 832              	.LFE24:
 833              		.size	SPIM_SetInterruptMode, .-SPIM_SetInterruptMode
 834              		.section	.text.SPIM_ReadStatus,"ax",%progbits
 835              		.align	2
 836              		.global	SPIM_ReadStatus
 837              		.code	16
 838              		.thumb_func
 839              		.type	SPIM_ReadStatus, %function
 840              	SPIM_ReadStatus:
 841              	.LFB25:
1095:Generated_Source\PSoC4/SPIM.c **** 
1096:Generated_Source\PSoC4/SPIM.c **** 
1097:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadStatus
1099:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1100:Generated_Source\PSoC4/SPIM.c **** *
1101:Generated_Source\PSoC4/SPIM.c **** * Summary:
1102:Generated_Source\PSoC4/SPIM.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC4/SPIM.c **** *
1104:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1105:Generated_Source\PSoC4/SPIM.c **** *  None.
1106:Generated_Source\PSoC4/SPIM.c **** *
1107:Generated_Source\PSoC4/SPIM.c **** * Return:
1108:Generated_Source\PSoC4/SPIM.c **** *  Contents of the status register.
1109:Generated_Source\PSoC4/SPIM.c **** *
1110:Generated_Source\PSoC4/SPIM.c **** * Global variables:
1111:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatus - used to store in software status register,
1112:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC4/SPIM.c **** *
1114:Generated_Source\PSoC4/SPIM.c **** * Theory:
1115:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC4/SPIM.c **** *  and flow control.
1117:Generated_Source\PSoC4/SPIM.c **** *
1118:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
1119:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC4/SPIM.c **** *
1121:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
1122:Generated_Source\PSoC4/SPIM.c **** *  No.
1123:Generated_Source\PSoC4/SPIM.c **** *
1124:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1125:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadStatus(void) 
1126:Generated_Source\PSoC4/SPIM.c **** {
 842              		.loc 1 1126 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846              		@ link register save eliminated.
1127:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC4/SPIM.c **** 
1129:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC4/SPIM.c **** 
1131:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableInt();
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 36


1132:Generated_Source\PSoC4/SPIM.c **** 
1133:Generated_Source\PSoC4/SPIM.c ****         tmpStatus  = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
1134:Generated_Source\PSoC4/SPIM.c ****         tmpStatus |= SPIM_GET_STATUS_TX(SPIM_swStatusTx);
1135:Generated_Source\PSoC4/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
1136:Generated_Source\PSoC4/SPIM.c **** 
1137:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = 0u;
1138:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusRx = 0u;
1139:Generated_Source\PSoC4/SPIM.c **** 
1140:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableInt();
1141:Generated_Source\PSoC4/SPIM.c **** 
1142:Generated_Source\PSoC4/SPIM.c ****     #else
1143:Generated_Source\PSoC4/SPIM.c **** 
1144:Generated_Source\PSoC4/SPIM.c ****         tmpStatus  = SPIM_RX_STATUS_REG;
 847              		.loc 1 1144 0
 848 0000 034B     		ldr	r3, .L70
 849 0002 1B78     		ldrb	r3, [r3]
 850              	.LVL39:
1145:Generated_Source\PSoC4/SPIM.c ****         tmpStatus |= SPIM_TX_STATUS_REG;
 851              		.loc 1 1145 0
 852 0004 034A     		ldr	r2, .L70+4
 853 0006 1078     		ldrb	r0, [r2]
 854 0008 1843     		orrs	r0, r3
 855              	.LVL40:
1146:Generated_Source\PSoC4/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
 856              		.loc 1 1146 0
 857 000a 1023     		movs	r3, #16
 858 000c 9843     		bics	r0, r3
 859              	.LVL41:
1147:Generated_Source\PSoC4/SPIM.c **** 
1148:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC4/SPIM.c **** 
1150:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
1151:Generated_Source\PSoC4/SPIM.c **** }
 860              		.loc 1 1151 0
 861              		@ sp needed
 862 000e 7047     		bx	lr
 863              	.L71:
 864              		.align	2
 865              	.L70:
 866 0010 63000F40 		.word	1074724963
 867 0014 61000F40 		.word	1074724961
 868              		.cfi_endproc
 869              	.LFE25:
 870              		.size	SPIM_ReadStatus, .-SPIM_ReadStatus
 871              		.comm	SPIM_swStatusRx,1,1
 872              		.comm	SPIM_swStatusTx,1,1
 873              		.global	SPIM_initVar
 874              		.bss
 875              		.set	.LANCHOR0,. + 0
 876              		.type	SPIM_initVar, %object
 877              		.size	SPIM_initVar, 1
 878              	SPIM_initVar:
 879 0000 00       		.space	1
 880              		.text
 881              	.Letext0:
 882              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 883              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 37


 884              		.file 4 "Generated_Source\\PSoC4\\SPIM_IntClock.h"
 885              		.section	.debug_info,"",%progbits
 886              	.Ldebug_info0:
 887 0000 DB040000 		.4byte	0x4db
 888 0004 0400     		.2byte	0x4
 889 0006 00000000 		.4byte	.Ldebug_abbrev0
 890 000a 04       		.byte	0x4
 891 000b 01       		.uleb128 0x1
 892 000c 97020000 		.4byte	.LASF58
 893 0010 0C       		.byte	0xc
 894 0011 C7000000 		.4byte	.LASF59
 895 0015 59020000 		.4byte	.LASF60
 896 0019 00000000 		.4byte	.Ldebug_ranges0+0
 897 001d 00000000 		.4byte	0
 898 0021 00000000 		.4byte	.Ldebug_line0
 899 0025 02       		.uleb128 0x2
 900 0026 01       		.byte	0x1
 901 0027 06       		.byte	0x6
 902 0028 DC030000 		.4byte	.LASF0
 903 002c 02       		.uleb128 0x2
 904 002d 01       		.byte	0x1
 905 002e 08       		.byte	0x8
 906 002f 79010000 		.4byte	.LASF1
 907 0033 02       		.uleb128 0x2
 908 0034 02       		.byte	0x2
 909 0035 05       		.byte	0x5
 910 0036 68030000 		.4byte	.LASF2
 911 003a 02       		.uleb128 0x2
 912 003b 02       		.byte	0x2
 913 003c 07       		.byte	0x7
 914 003d 5D000000 		.4byte	.LASF3
 915 0041 02       		.uleb128 0x2
 916 0042 04       		.byte	0x4
 917 0043 05       		.byte	0x5
 918 0044 BD030000 		.4byte	.LASF4
 919 0048 02       		.uleb128 0x2
 920 0049 04       		.byte	0x4
 921 004a 07       		.byte	0x7
 922 004b 32010000 		.4byte	.LASF5
 923 004f 02       		.uleb128 0x2
 924 0050 08       		.byte	0x8
 925 0051 05       		.byte	0x5
 926 0052 2E030000 		.4byte	.LASF6
 927 0056 02       		.uleb128 0x2
 928 0057 08       		.byte	0x8
 929 0058 07       		.byte	0x7
 930 0059 EB000000 		.4byte	.LASF7
 931 005d 03       		.uleb128 0x3
 932 005e 04       		.byte	0x4
 933 005f 05       		.byte	0x5
 934 0060 696E7400 		.ascii	"int\000"
 935 0064 02       		.uleb128 0x2
 936 0065 04       		.byte	0x4
 937 0066 07       		.byte	0x7
 938 0067 11020000 		.4byte	.LASF8
 939 006b 04       		.uleb128 0x4
 940 006c 44010000 		.4byte	.LASF9
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 38


 941 0070 02       		.byte	0x2
 942 0071 E401     		.2byte	0x1e4
 943 0073 2C000000 		.4byte	0x2c
 944 0077 04       		.uleb128 0x4
 945 0078 DB010000 		.4byte	.LASF10
 946 007c 02       		.byte	0x2
 947 007d E501     		.2byte	0x1e5
 948 007f 3A000000 		.4byte	0x3a
 949 0083 02       		.uleb128 0x2
 950 0084 04       		.byte	0x4
 951 0085 04       		.byte	0x4
 952 0086 E5000000 		.4byte	.LASF11
 953 008a 02       		.uleb128 0x2
 954 008b 08       		.byte	0x8
 955 008c 04       		.byte	0x4
 956 008d 99010000 		.4byte	.LASF12
 957 0091 02       		.uleb128 0x2
 958 0092 01       		.byte	0x1
 959 0093 08       		.byte	0x8
 960 0094 70000000 		.4byte	.LASF13
 961 0098 04       		.uleb128 0x4
 962 0099 1C010000 		.4byte	.LASF14
 963 009d 02       		.byte	0x2
 964 009e 8E02     		.2byte	0x28e
 965 00a0 A4000000 		.4byte	0xa4
 966 00a4 05       		.uleb128 0x5
 967 00a5 6B000000 		.4byte	0x6b
 968 00a9 04       		.uleb128 0x4
 969 00aa 00000000 		.4byte	.LASF15
 970 00ae 02       		.byte	0x2
 971 00af 8F02     		.2byte	0x28f
 972 00b1 B5000000 		.4byte	0xb5
 973 00b5 05       		.uleb128 0x5
 974 00b6 77000000 		.4byte	0x77
 975 00ba 02       		.uleb128 0x2
 976 00bb 08       		.byte	0x8
 977 00bc 04       		.byte	0x4
 978 00bd D0030000 		.4byte	.LASF16
 979 00c1 02       		.uleb128 0x2
 980 00c2 04       		.byte	0x4
 981 00c3 07       		.byte	0x7
 982 00c4 25030000 		.4byte	.LASF17
 983 00c8 06       		.uleb128 0x6
 984 00c9 2D000000 		.4byte	.LASF18
 985 00cd 01       		.byte	0x1
 986 00ce 78       		.byte	0x78
 987 00cf 00000000 		.4byte	.LFB3
 988 00d3 40000000 		.4byte	.LFE3-.LFB3
 989 00d7 01       		.uleb128 0x1
 990 00d8 9C       		.byte	0x9c
 991 00d9 0F010000 		.4byte	0x10f
 992 00dd 07       		.uleb128 0x7
 993 00de 58010000 		.4byte	.LASF20
 994 00e2 01       		.byte	0x1
 995 00e3 7A       		.byte	0x7a
 996 00e4 6B000000 		.4byte	0x6b
 997 00e8 00000000 		.4byte	.LLST0
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 39


 998 00ec 08       		.uleb128 0x8
 999 00ed 06000000 		.4byte	.LVL0
 1000 00f1 B2040000 		.4byte	0x4b2
 1001 00f5 08       		.uleb128 0x8
 1002 00f6 2C000000 		.4byte	.LVL1
 1003 00fa BD040000 		.4byte	0x4bd
 1004 00fe 09       		.uleb128 0x9
 1005 00ff 32000000 		.4byte	.LVL2
 1006 0103 C8040000 		.4byte	0x4c8
 1007 0107 0A       		.uleb128 0xa
 1008 0108 01       		.uleb128 0x1
 1009 0109 50       		.byte	0x50
 1010 010a 02       		.uleb128 0x2
 1011 010b 08       		.byte	0x8
 1012 010c FF       		.byte	0xff
 1013 010d 00       		.byte	0
 1014 010e 00       		.byte	0
 1015 010f 06       		.uleb128 0x6
 1016 0110 39000000 		.4byte	.LASF19
 1017 0114 01       		.byte	0x1
 1018 0115 C0       		.byte	0xc0
 1019 0116 00000000 		.4byte	.LFB5
 1020 011a 2C000000 		.4byte	.LFE5-.LFB5
 1021 011e 01       		.uleb128 0x1
 1022 011f 9C       		.byte	0x9c
 1023 0120 4F010000 		.4byte	0x14f
 1024 0124 07       		.uleb128 0x7
 1025 0125 58010000 		.4byte	.LASF20
 1026 0129 01       		.byte	0x1
 1027 012a C2       		.byte	0xc2
 1028 012b 6B000000 		.4byte	0x6b
 1029 012f 13000000 		.4byte	.LLST1
 1030 0133 08       		.uleb128 0x8
 1031 0134 06000000 		.4byte	.LVL3
 1032 0138 B2040000 		.4byte	0x4b2
 1033 013c 08       		.uleb128 0x8
 1034 013d 1C000000 		.4byte	.LVL4
 1035 0141 BD040000 		.4byte	0x4bd
 1036 0145 08       		.uleb128 0x8
 1037 0146 20000000 		.4byte	.LVL5
 1038 014a D3040000 		.4byte	0x4d3
 1039 014e 00       		.byte	0
 1040 014f 0B       		.uleb128 0xb
 1041 0150 21010000 		.4byte	.LASF21
 1042 0154 01       		.byte	0x1
 1043 0155 E3       		.byte	0xe3
 1044 0156 00000000 		.4byte	.LFB6
 1045 015a 02000000 		.4byte	.LFE6-.LFB6
 1046 015e 01       		.uleb128 0x1
 1047 015f 9C       		.byte	0x9c
 1048 0160 0B       		.uleb128 0xb
 1049 0161 AC030000 		.4byte	.LASF22
 1050 0165 01       		.byte	0x1
 1051 0166 FC       		.byte	0xfc
 1052 0167 00000000 		.4byte	.LFB7
 1053 016b 02000000 		.4byte	.LFE7-.LFB7
 1054 016f 01       		.uleb128 0x1
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 40


 1055 0170 9C       		.byte	0x9c
 1056 0171 0C       		.uleb128 0xc
 1057 0172 87010000 		.4byte	.LASF23
 1058 0176 01       		.byte	0x1
 1059 0177 1501     		.2byte	0x115
 1060 0179 00000000 		.4byte	.LFB8
 1061 017d 02000000 		.4byte	.LFE8-.LFB8
 1062 0181 01       		.uleb128 0x1
 1063 0182 9C       		.byte	0x9c
 1064 0183 0C       		.uleb128 0xc
 1065 0184 05040000 		.4byte	.LASF24
 1066 0188 01       		.byte	0x1
 1067 0189 2E01     		.2byte	0x12e
 1068 018b 00000000 		.4byte	.LFB9
 1069 018f 02000000 		.4byte	.LFE9-.LFB9
 1070 0193 01       		.uleb128 0x1
 1071 0194 9C       		.byte	0x9c
 1072 0195 0D       		.uleb128 0xd
 1073 0196 E2010000 		.4byte	.LASF25
 1074 019a 01       		.byte	0x1
 1075 019b 4801     		.2byte	0x148
 1076 019d 00000000 		.4byte	.LFB10
 1077 01a1 0C000000 		.4byte	.LFE10-.LFB10
 1078 01a5 01       		.uleb128 0x1
 1079 01a6 9C       		.byte	0x9c
 1080 01a7 BA010000 		.4byte	0x1ba
 1081 01ab 0E       		.uleb128 0xe
 1082 01ac AF010000 		.4byte	.LASF27
 1083 01b0 01       		.byte	0x1
 1084 01b1 4801     		.2byte	0x148
 1085 01b3 6B000000 		.4byte	0x6b
 1086 01b7 01       		.uleb128 0x1
 1087 01b8 50       		.byte	0x50
 1088 01b9 00       		.byte	0
 1089 01ba 0D       		.uleb128 0xd
 1090 01bb 8B000000 		.4byte	.LASF26
 1091 01bf 01       		.byte	0x1
 1092 01c0 6001     		.2byte	0x160
 1093 01c2 00000000 		.4byte	.LFB11
 1094 01c6 0C000000 		.4byte	.LFE11-.LFB11
 1095 01ca 01       		.uleb128 0x1
 1096 01cb 9C       		.byte	0x9c
 1097 01cc DF010000 		.4byte	0x1df
 1098 01d0 0E       		.uleb128 0xe
 1099 01d1 AF010000 		.4byte	.LASF27
 1100 01d5 01       		.byte	0x1
 1101 01d6 6001     		.2byte	0x160
 1102 01d8 6B000000 		.4byte	0x6b
 1103 01dc 01       		.uleb128 0x1
 1104 01dd 50       		.byte	0x50
 1105 01de 00       		.byte	0
 1106 01df 0F       		.uleb128 0xf
 1107 01e0 F3030000 		.4byte	.LASF29
 1108 01e4 01       		.byte	0x1
 1109 01e5 8201     		.2byte	0x182
 1110 01e7 6B000000 		.4byte	0x6b
 1111 01eb 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 41


 1112 01ef 0C000000 		.4byte	.LFE12-.LFB12
 1113 01f3 01       		.uleb128 0x1
 1114 01f4 9C       		.byte	0x9c
 1115 01f5 08020000 		.4byte	0x208
 1116 01f9 10       		.uleb128 0x10
 1117 01fa C6030000 		.4byte	.LASF28
 1118 01fe 01       		.byte	0x1
 1119 01ff 8401     		.2byte	0x184
 1120 0201 6B000000 		.4byte	0x6b
 1121 0205 01       		.uleb128 0x1
 1122 0206 50       		.byte	0x50
 1123 0207 00       		.byte	0
 1124 0208 0F       		.uleb128 0xf
 1125 0209 3E020000 		.4byte	.LASF30
 1126 020d 01       		.byte	0x1
 1127 020e B501     		.2byte	0x1b5
 1128 0210 6B000000 		.4byte	0x6b
 1129 0214 00000000 		.4byte	.LFB13
 1130 0218 0C000000 		.4byte	.LFE13-.LFB13
 1131 021c 01       		.uleb128 0x1
 1132 021d 9C       		.byte	0x9c
 1133 021e 31020000 		.4byte	0x231
 1134 0222 10       		.uleb128 0x10
 1135 0223 C6030000 		.4byte	.LASF28
 1136 0227 01       		.byte	0x1
 1137 0228 B701     		.2byte	0x1b7
 1138 022a 6B000000 		.4byte	0x6b
 1139 022e 01       		.uleb128 0x1
 1140 022f 50       		.byte	0x50
 1141 0230 00       		.byte	0
 1142 0231 0D       		.uleb128 0xd
 1143 0232 1C000000 		.4byte	.LASF31
 1144 0236 01       		.byte	0x1
 1145 0237 EE01     		.2byte	0x1ee
 1146 0239 00000000 		.4byte	.LFB14
 1147 023d 18000000 		.4byte	.LFE14-.LFB14
 1148 0241 01       		.uleb128 0x1
 1149 0242 9C       		.byte	0x9c
 1150 0243 56020000 		.4byte	0x256
 1151 0247 0E       		.uleb128 0xe
 1152 0248 56000000 		.4byte	.LASF32
 1153 024c 01       		.byte	0x1
 1154 024d EE01     		.2byte	0x1ee
 1155 024f 77000000 		.4byte	0x77
 1156 0253 01       		.uleb128 0x1
 1157 0254 50       		.byte	0x50
 1158 0255 00       		.byte	0
 1159 0256 0F       		.uleb128 0xf
 1160 0257 69010000 		.4byte	.LASF33
 1161 025b 01       		.byte	0x1
 1162 025c 5A02     		.2byte	0x25a
 1163 025e 77000000 		.4byte	0x77
 1164 0262 00000000 		.4byte	.LFB15
 1165 0266 0C000000 		.4byte	.LFE15-.LFB15
 1166 026a 01       		.uleb128 0x1
 1167 026b 9C       		.byte	0x9c
 1168 026c 7F020000 		.4byte	0x27f
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 42


 1169 0270 10       		.uleb128 0x10
 1170 0271 B0000000 		.4byte	.LASF34
 1171 0275 01       		.byte	0x1
 1172 0276 5C02     		.2byte	0x25c
 1173 0278 77000000 		.4byte	0x77
 1174 027c 01       		.uleb128 0x1
 1175 027d 50       		.byte	0x50
 1176 027e 00       		.byte	0
 1177 027f 0F       		.uleb128 0xf
 1178 0280 C6010000 		.4byte	.LASF35
 1179 0284 01       		.byte	0x1
 1180 0285 9A02     		.2byte	0x29a
 1181 0287 6B000000 		.4byte	0x6b
 1182 028b 00000000 		.4byte	.LFB16
 1183 028f 14000000 		.4byte	.LFE16-.LFB16
 1184 0293 01       		.uleb128 0x1
 1185 0294 9C       		.byte	0x9c
 1186 0295 A8020000 		.4byte	0x2a8
 1187 0299 10       		.uleb128 0x10
 1188 029a 02010000 		.4byte	.LASF36
 1189 029e 01       		.byte	0x1
 1190 029f 9C02     		.2byte	0x29c
 1191 02a1 6B000000 		.4byte	0x6b
 1192 02a5 01       		.uleb128 0x1
 1193 02a6 50       		.byte	0x50
 1194 02a7 00       		.byte	0
 1195 02a8 0F       		.uleb128 0xf
 1196 02a9 07010000 		.4byte	.LASF37
 1197 02ad 01       		.byte	0x1
 1198 02ae D702     		.2byte	0x2d7
 1199 02b0 6B000000 		.4byte	0x6b
 1200 02b4 00000000 		.4byte	.LFB17
 1201 02b8 20000000 		.4byte	.LFE17-.LFB17
 1202 02bc 01       		.uleb128 0x1
 1203 02bd 9C       		.byte	0x9c
 1204 02be D3020000 		.4byte	0x2d3
 1205 02c2 11       		.uleb128 0x11
 1206 02c3 02010000 		.4byte	.LASF36
 1207 02c7 01       		.byte	0x1
 1208 02c8 D902     		.2byte	0x2d9
 1209 02ca 6B000000 		.4byte	0x6b
 1210 02ce 26000000 		.4byte	.LLST2
 1211 02d2 00       		.byte	0
 1212 02d3 0C       		.uleb128 0xc
 1213 02d4 55030000 		.4byte	.LASF38
 1214 02d8 01       		.byte	0x1
 1215 02d9 2603     		.2byte	0x326
 1216 02db 00000000 		.4byte	.LFB18
 1217 02df 18000000 		.4byte	.LFE18-.LFB18
 1218 02e3 01       		.uleb128 0x1
 1219 02e4 9C       		.byte	0x9c
 1220 02e5 0D       		.uleb128 0xd
 1221 02e6 72030000 		.4byte	.LASF39
 1222 02ea 01       		.byte	0x1
 1223 02eb 5D03     		.2byte	0x35d
 1224 02ed 00000000 		.4byte	.LFB19
 1225 02f1 38000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 43


 1226 02f5 01       		.uleb128 0x1
 1227 02f6 9C       		.byte	0x9c
 1228 02f7 1E030000 		.4byte	0x31e
 1229 02fb 11       		.uleb128 0x11
 1230 02fc 58010000 		.4byte	.LASF20
 1231 0300 01       		.byte	0x1
 1232 0301 5F03     		.2byte	0x35f
 1233 0303 6B000000 		.4byte	0x6b
 1234 0307 4F000000 		.4byte	.LLST3
 1235 030b 08       		.uleb128 0x8
 1236 030c 06000000 		.4byte	.LVL18
 1237 0310 B2040000 		.4byte	0x4b2
 1238 0314 08       		.uleb128 0x8
 1239 0315 2E000000 		.4byte	.LVL19
 1240 0319 BD040000 		.4byte	0x4bd
 1241 031d 00       		.byte	0
 1242 031e 0D       		.uleb128 0xd
 1243 031f 4A010000 		.4byte	.LASF40
 1244 0323 01       		.byte	0x1
 1245 0324 C203     		.2byte	0x3c2
 1246 0326 00000000 		.4byte	.LFB20
 1247 032a 20000000 		.4byte	.LFE20-.LFB20
 1248 032e 01       		.uleb128 0x1
 1249 032f 9C       		.byte	0x9c
 1250 0330 6E030000 		.4byte	0x36e
 1251 0334 12       		.uleb128 0x12
 1252 0335 85030000 		.4byte	.LASF41
 1253 0339 01       		.byte	0x1
 1254 033a C203     		.2byte	0x3c2
 1255 033c 6E030000 		.4byte	0x36e
 1256 0340 62000000 		.4byte	.LLST4
 1257 0344 12       		.uleb128 0x12
 1258 0345 34020000 		.4byte	.LASF42
 1259 0349 01       		.byte	0x1
 1260 034a C203     		.2byte	0x3c2
 1261 034c 6B000000 		.4byte	0x6b
 1262 0350 8E000000 		.4byte	.LLST5
 1263 0354 11       		.uleb128 0x11
 1264 0355 50020000 		.4byte	.LASF43
 1265 0359 01       		.byte	0x1
 1266 035a C503     		.2byte	0x3c5
 1267 035c 6B000000 		.4byte	0x6b
 1268 0360 B7000000 		.4byte	.LLST6
 1269 0364 08       		.uleb128 0x8
 1270 0365 12000000 		.4byte	.LVL23
 1271 0369 31020000 		.4byte	0x231
 1272 036d 00       		.byte	0
 1273 036e 13       		.uleb128 0x13
 1274 036f 04       		.byte	0x4
 1275 0370 74030000 		.4byte	0x374
 1276 0374 14       		.uleb128 0x14
 1277 0375 77000000 		.4byte	0x77
 1278 0379 0D       		.uleb128 0xd
 1279 037a 46030000 		.4byte	.LASF44
 1280 037e 01       		.byte	0x1
 1281 037f E303     		.2byte	0x3e3
 1282 0381 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 44


 1283 0385 50000000 		.4byte	.LFE21-.LFB21
 1284 0389 01       		.uleb128 0x1
 1285 038a 9C       		.byte	0x9c
 1286 038b B2030000 		.4byte	0x3b2
 1287 038f 11       		.uleb128 0x11
 1288 0390 58010000 		.4byte	.LASF20
 1289 0394 01       		.byte	0x1
 1290 0395 E503     		.2byte	0x3e5
 1291 0397 6B000000 		.4byte	0x6b
 1292 039b E1000000 		.4byte	.LLST7
 1293 039f 08       		.uleb128 0x8
 1294 03a0 14000000 		.4byte	.LVL31
 1295 03a4 B2040000 		.4byte	0x4b2
 1296 03a8 08       		.uleb128 0x8
 1297 03a9 3C000000 		.4byte	.LVL32
 1298 03ad BD040000 		.4byte	0x4bd
 1299 03b1 00       		.byte	0
 1300 03b2 06       		.uleb128 0x6
 1301 03b3 3C030000 		.4byte	.LASF45
 1302 03b7 01       		.byte	0x1
 1303 03b8 3F       		.byte	0x3f
 1304 03b9 00000000 		.4byte	.LFB2
 1305 03bd 2C000000 		.4byte	.LFE2-.LFB2
 1306 03c1 01       		.uleb128 0x1
 1307 03c2 9C       		.byte	0x9c
 1308 03c3 E3030000 		.4byte	0x3e3
 1309 03c7 08       		.uleb128 0x8
 1310 03c8 0C000000 		.4byte	.LVL33
 1311 03cc 79030000 		.4byte	0x379
 1312 03d0 08       		.uleb128 0x8
 1313 03d1 10000000 		.4byte	.LVL34
 1314 03d5 DF010000 		.4byte	0x1df
 1315 03d9 08       		.uleb128 0x8
 1316 03da 14000000 		.4byte	.LVL35
 1317 03de 08020000 		.4byte	0x208
 1318 03e2 00       		.byte	0
 1319 03e3 06       		.uleb128 0x6
 1320 03e4 E8030000 		.4byte	.LASF46
 1321 03e8 01       		.byte	0x1
 1322 03e9 A3       		.byte	0xa3
 1323 03ea 00000000 		.4byte	.LFB4
 1324 03ee 20000000 		.4byte	.LFE4-.LFB4
 1325 03f2 01       		.uleb128 0x1
 1326 03f3 9C       		.byte	0x9c
 1327 03f4 0B040000 		.4byte	0x40b
 1328 03f8 08       		.uleb128 0x8
 1329 03f9 0E000000 		.4byte	.LVL36
 1330 03fd B2030000 		.4byte	0x3b2
 1331 0401 08       		.uleb128 0x8
 1332 0402 18000000 		.4byte	.LVL37
 1333 0406 C8000000 		.4byte	0xc8
 1334 040a 00       		.byte	0
 1335 040b 0C       		.uleb128 0xc
 1336 040c A0010000 		.4byte	.LASF47
 1337 0410 01       		.byte	0x1
 1338 0411 1104     		.2byte	0x411
 1339 0413 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 45


 1340 0417 02000000 		.4byte	.LFE22-.LFB22
 1341 041b 01       		.uleb128 0x1
 1342 041c 9C       		.byte	0x9c
 1343 041d 0C       		.uleb128 0xc
 1344 041e B7000000 		.4byte	.LASF48
 1345 0422 01       		.byte	0x1
 1346 0423 2904     		.2byte	0x429
 1347 0425 00000000 		.4byte	.LFB23
 1348 0429 02000000 		.4byte	.LFE23-.LFB23
 1349 042d 01       		.uleb128 0x1
 1350 042e 9C       		.byte	0x9c
 1351 042f 0D       		.uleb128 0xd
 1352 0430 75000000 		.4byte	.LASF49
 1353 0434 01       		.byte	0x1
 1354 0435 4204     		.2byte	0x442
 1355 0437 00000000 		.4byte	.LFB24
 1356 043b 18000000 		.4byte	.LFE24-.LFB24
 1357 043f 01       		.uleb128 0x1
 1358 0440 9C       		.byte	0x9c
 1359 0441 54040000 		.4byte	0x454
 1360 0445 0E       		.uleb128 0xe
 1361 0446 AF010000 		.4byte	.LASF27
 1362 044a 01       		.byte	0x1
 1363 044b 4204     		.2byte	0x442
 1364 044d 6B000000 		.4byte	0x6b
 1365 0451 01       		.uleb128 0x1
 1366 0452 50       		.byte	0x50
 1367 0453 00       		.byte	0
 1368 0454 0F       		.uleb128 0xf
 1369 0455 8C030000 		.4byte	.LASF50
 1370 0459 01       		.byte	0x1
 1371 045a 6504     		.2byte	0x465
 1372 045c 6B000000 		.4byte	0x6b
 1373 0460 00000000 		.4byte	.LFB25
 1374 0464 18000000 		.4byte	.LFE25-.LFB25
 1375 0468 01       		.uleb128 0x1
 1376 0469 9C       		.byte	0x9c
 1377 046a 7F040000 		.4byte	0x47f
 1378 046e 11       		.uleb128 0x11
 1379 046f C6030000 		.4byte	.LASF28
 1380 0473 01       		.byte	0x1
 1381 0474 6704     		.2byte	0x467
 1382 0476 6B000000 		.4byte	0x6b
 1383 047a F4000000 		.4byte	.LLST8
 1384 047e 00       		.byte	0
 1385 047f 15       		.uleb128 0x15
 1386 0480 A3000000 		.4byte	.LASF51
 1387 0484 01       		.byte	0x1
 1388 0485 22       		.byte	0x22
 1389 0486 6B000000 		.4byte	0x6b
 1390 048a 05       		.uleb128 0x5
 1391 048b 03       		.byte	0x3
 1392 048c 00000000 		.4byte	SPIM_initVar
 1393 0490 15       		.uleb128 0x15
 1394 0491 9C030000 		.4byte	.LASF52
 1395 0495 01       		.byte	0x1
 1396 0496 24       		.byte	0x24
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 46


 1397 0497 A4000000 		.4byte	0xa4
 1398 049b 05       		.uleb128 0x5
 1399 049c 03       		.byte	0x3
 1400 049d 00000000 		.4byte	SPIM_swStatusTx
 1401 04a1 15       		.uleb128 0x15
 1402 04a2 B6010000 		.4byte	.LASF53
 1403 04a6 01       		.byte	0x1
 1404 04a7 25       		.byte	0x25
 1405 04a8 A4000000 		.4byte	0xa4
 1406 04ac 05       		.uleb128 0x5
 1407 04ad 03       		.byte	0x3
 1408 04ae 00000000 		.4byte	SPIM_swStatusRx
 1409 04b2 16       		.uleb128 0x16
 1410 04b3 FA010000 		.4byte	.LASF54
 1411 04b7 FA010000 		.4byte	.LASF54
 1412 04bb 03       		.byte	0x3
 1413 04bc E5       		.byte	0xe5
 1414 04bd 16       		.uleb128 0x16
 1415 04be 1E020000 		.4byte	.LASF55
 1416 04c2 1E020000 		.4byte	.LASF55
 1417 04c6 03       		.byte	0x3
 1418 04c7 E6       		.byte	0xe6
 1419 04c8 16       		.uleb128 0x16
 1420 04c9 06000000 		.4byte	.LASF56
 1421 04cd 06000000 		.4byte	.LASF56
 1422 04d1 04       		.byte	0x4
 1423 04d2 1D       		.byte	0x1d
 1424 04d3 16       		.uleb128 0x16
 1425 04d4 43000000 		.4byte	.LASF57
 1426 04d8 43000000 		.4byte	.LASF57
 1427 04dc 04       		.byte	0x4
 1428 04dd 27       		.byte	0x27
 1429 04de 00       		.byte	0
 1430              		.section	.debug_abbrev,"",%progbits
 1431              	.Ldebug_abbrev0:
 1432 0000 01       		.uleb128 0x1
 1433 0001 11       		.uleb128 0x11
 1434 0002 01       		.byte	0x1
 1435 0003 25       		.uleb128 0x25
 1436 0004 0E       		.uleb128 0xe
 1437 0005 13       		.uleb128 0x13
 1438 0006 0B       		.uleb128 0xb
 1439 0007 03       		.uleb128 0x3
 1440 0008 0E       		.uleb128 0xe
 1441 0009 1B       		.uleb128 0x1b
 1442 000a 0E       		.uleb128 0xe
 1443 000b 55       		.uleb128 0x55
 1444 000c 17       		.uleb128 0x17
 1445 000d 11       		.uleb128 0x11
 1446 000e 01       		.uleb128 0x1
 1447 000f 10       		.uleb128 0x10
 1448 0010 17       		.uleb128 0x17
 1449 0011 00       		.byte	0
 1450 0012 00       		.byte	0
 1451 0013 02       		.uleb128 0x2
 1452 0014 24       		.uleb128 0x24
 1453 0015 00       		.byte	0
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 47


 1454 0016 0B       		.uleb128 0xb
 1455 0017 0B       		.uleb128 0xb
 1456 0018 3E       		.uleb128 0x3e
 1457 0019 0B       		.uleb128 0xb
 1458 001a 03       		.uleb128 0x3
 1459 001b 0E       		.uleb128 0xe
 1460 001c 00       		.byte	0
 1461 001d 00       		.byte	0
 1462 001e 03       		.uleb128 0x3
 1463 001f 24       		.uleb128 0x24
 1464 0020 00       		.byte	0
 1465 0021 0B       		.uleb128 0xb
 1466 0022 0B       		.uleb128 0xb
 1467 0023 3E       		.uleb128 0x3e
 1468 0024 0B       		.uleb128 0xb
 1469 0025 03       		.uleb128 0x3
 1470 0026 08       		.uleb128 0x8
 1471 0027 00       		.byte	0
 1472 0028 00       		.byte	0
 1473 0029 04       		.uleb128 0x4
 1474 002a 16       		.uleb128 0x16
 1475 002b 00       		.byte	0
 1476 002c 03       		.uleb128 0x3
 1477 002d 0E       		.uleb128 0xe
 1478 002e 3A       		.uleb128 0x3a
 1479 002f 0B       		.uleb128 0xb
 1480 0030 3B       		.uleb128 0x3b
 1481 0031 05       		.uleb128 0x5
 1482 0032 49       		.uleb128 0x49
 1483 0033 13       		.uleb128 0x13
 1484 0034 00       		.byte	0
 1485 0035 00       		.byte	0
 1486 0036 05       		.uleb128 0x5
 1487 0037 35       		.uleb128 0x35
 1488 0038 00       		.byte	0
 1489 0039 49       		.uleb128 0x49
 1490 003a 13       		.uleb128 0x13
 1491 003b 00       		.byte	0
 1492 003c 00       		.byte	0
 1493 003d 06       		.uleb128 0x6
 1494 003e 2E       		.uleb128 0x2e
 1495 003f 01       		.byte	0x1
 1496 0040 3F       		.uleb128 0x3f
 1497 0041 19       		.uleb128 0x19
 1498 0042 03       		.uleb128 0x3
 1499 0043 0E       		.uleb128 0xe
 1500 0044 3A       		.uleb128 0x3a
 1501 0045 0B       		.uleb128 0xb
 1502 0046 3B       		.uleb128 0x3b
 1503 0047 0B       		.uleb128 0xb
 1504 0048 27       		.uleb128 0x27
 1505 0049 19       		.uleb128 0x19
 1506 004a 11       		.uleb128 0x11
 1507 004b 01       		.uleb128 0x1
 1508 004c 12       		.uleb128 0x12
 1509 004d 06       		.uleb128 0x6
 1510 004e 40       		.uleb128 0x40
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 48


 1511 004f 18       		.uleb128 0x18
 1512 0050 9742     		.uleb128 0x2117
 1513 0052 19       		.uleb128 0x19
 1514 0053 01       		.uleb128 0x1
 1515 0054 13       		.uleb128 0x13
 1516 0055 00       		.byte	0
 1517 0056 00       		.byte	0
 1518 0057 07       		.uleb128 0x7
 1519 0058 34       		.uleb128 0x34
 1520 0059 00       		.byte	0
 1521 005a 03       		.uleb128 0x3
 1522 005b 0E       		.uleb128 0xe
 1523 005c 3A       		.uleb128 0x3a
 1524 005d 0B       		.uleb128 0xb
 1525 005e 3B       		.uleb128 0x3b
 1526 005f 0B       		.uleb128 0xb
 1527 0060 49       		.uleb128 0x49
 1528 0061 13       		.uleb128 0x13
 1529 0062 02       		.uleb128 0x2
 1530 0063 17       		.uleb128 0x17
 1531 0064 00       		.byte	0
 1532 0065 00       		.byte	0
 1533 0066 08       		.uleb128 0x8
 1534 0067 898201   		.uleb128 0x4109
 1535 006a 00       		.byte	0
 1536 006b 11       		.uleb128 0x11
 1537 006c 01       		.uleb128 0x1
 1538 006d 31       		.uleb128 0x31
 1539 006e 13       		.uleb128 0x13
 1540 006f 00       		.byte	0
 1541 0070 00       		.byte	0
 1542 0071 09       		.uleb128 0x9
 1543 0072 898201   		.uleb128 0x4109
 1544 0075 01       		.byte	0x1
 1545 0076 11       		.uleb128 0x11
 1546 0077 01       		.uleb128 0x1
 1547 0078 31       		.uleb128 0x31
 1548 0079 13       		.uleb128 0x13
 1549 007a 00       		.byte	0
 1550 007b 00       		.byte	0
 1551 007c 0A       		.uleb128 0xa
 1552 007d 8A8201   		.uleb128 0x410a
 1553 0080 00       		.byte	0
 1554 0081 02       		.uleb128 0x2
 1555 0082 18       		.uleb128 0x18
 1556 0083 9142     		.uleb128 0x2111
 1557 0085 18       		.uleb128 0x18
 1558 0086 00       		.byte	0
 1559 0087 00       		.byte	0
 1560 0088 0B       		.uleb128 0xb
 1561 0089 2E       		.uleb128 0x2e
 1562 008a 00       		.byte	0
 1563 008b 3F       		.uleb128 0x3f
 1564 008c 19       		.uleb128 0x19
 1565 008d 03       		.uleb128 0x3
 1566 008e 0E       		.uleb128 0xe
 1567 008f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 49


 1568 0090 0B       		.uleb128 0xb
 1569 0091 3B       		.uleb128 0x3b
 1570 0092 0B       		.uleb128 0xb
 1571 0093 27       		.uleb128 0x27
 1572 0094 19       		.uleb128 0x19
 1573 0095 11       		.uleb128 0x11
 1574 0096 01       		.uleb128 0x1
 1575 0097 12       		.uleb128 0x12
 1576 0098 06       		.uleb128 0x6
 1577 0099 40       		.uleb128 0x40
 1578 009a 18       		.uleb128 0x18
 1579 009b 9742     		.uleb128 0x2117
 1580 009d 19       		.uleb128 0x19
 1581 009e 00       		.byte	0
 1582 009f 00       		.byte	0
 1583 00a0 0C       		.uleb128 0xc
 1584 00a1 2E       		.uleb128 0x2e
 1585 00a2 00       		.byte	0
 1586 00a3 3F       		.uleb128 0x3f
 1587 00a4 19       		.uleb128 0x19
 1588 00a5 03       		.uleb128 0x3
 1589 00a6 0E       		.uleb128 0xe
 1590 00a7 3A       		.uleb128 0x3a
 1591 00a8 0B       		.uleb128 0xb
 1592 00a9 3B       		.uleb128 0x3b
 1593 00aa 05       		.uleb128 0x5
 1594 00ab 27       		.uleb128 0x27
 1595 00ac 19       		.uleb128 0x19
 1596 00ad 11       		.uleb128 0x11
 1597 00ae 01       		.uleb128 0x1
 1598 00af 12       		.uleb128 0x12
 1599 00b0 06       		.uleb128 0x6
 1600 00b1 40       		.uleb128 0x40
 1601 00b2 18       		.uleb128 0x18
 1602 00b3 9742     		.uleb128 0x2117
 1603 00b5 19       		.uleb128 0x19
 1604 00b6 00       		.byte	0
 1605 00b7 00       		.byte	0
 1606 00b8 0D       		.uleb128 0xd
 1607 00b9 2E       		.uleb128 0x2e
 1608 00ba 01       		.byte	0x1
 1609 00bb 3F       		.uleb128 0x3f
 1610 00bc 19       		.uleb128 0x19
 1611 00bd 03       		.uleb128 0x3
 1612 00be 0E       		.uleb128 0xe
 1613 00bf 3A       		.uleb128 0x3a
 1614 00c0 0B       		.uleb128 0xb
 1615 00c1 3B       		.uleb128 0x3b
 1616 00c2 05       		.uleb128 0x5
 1617 00c3 27       		.uleb128 0x27
 1618 00c4 19       		.uleb128 0x19
 1619 00c5 11       		.uleb128 0x11
 1620 00c6 01       		.uleb128 0x1
 1621 00c7 12       		.uleb128 0x12
 1622 00c8 06       		.uleb128 0x6
 1623 00c9 40       		.uleb128 0x40
 1624 00ca 18       		.uleb128 0x18
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 50


 1625 00cb 9742     		.uleb128 0x2117
 1626 00cd 19       		.uleb128 0x19
 1627 00ce 01       		.uleb128 0x1
 1628 00cf 13       		.uleb128 0x13
 1629 00d0 00       		.byte	0
 1630 00d1 00       		.byte	0
 1631 00d2 0E       		.uleb128 0xe
 1632 00d3 05       		.uleb128 0x5
 1633 00d4 00       		.byte	0
 1634 00d5 03       		.uleb128 0x3
 1635 00d6 0E       		.uleb128 0xe
 1636 00d7 3A       		.uleb128 0x3a
 1637 00d8 0B       		.uleb128 0xb
 1638 00d9 3B       		.uleb128 0x3b
 1639 00da 05       		.uleb128 0x5
 1640 00db 49       		.uleb128 0x49
 1641 00dc 13       		.uleb128 0x13
 1642 00dd 02       		.uleb128 0x2
 1643 00de 18       		.uleb128 0x18
 1644 00df 00       		.byte	0
 1645 00e0 00       		.byte	0
 1646 00e1 0F       		.uleb128 0xf
 1647 00e2 2E       		.uleb128 0x2e
 1648 00e3 01       		.byte	0x1
 1649 00e4 3F       		.uleb128 0x3f
 1650 00e5 19       		.uleb128 0x19
 1651 00e6 03       		.uleb128 0x3
 1652 00e7 0E       		.uleb128 0xe
 1653 00e8 3A       		.uleb128 0x3a
 1654 00e9 0B       		.uleb128 0xb
 1655 00ea 3B       		.uleb128 0x3b
 1656 00eb 05       		.uleb128 0x5
 1657 00ec 27       		.uleb128 0x27
 1658 00ed 19       		.uleb128 0x19
 1659 00ee 49       		.uleb128 0x49
 1660 00ef 13       		.uleb128 0x13
 1661 00f0 11       		.uleb128 0x11
 1662 00f1 01       		.uleb128 0x1
 1663 00f2 12       		.uleb128 0x12
 1664 00f3 06       		.uleb128 0x6
 1665 00f4 40       		.uleb128 0x40
 1666 00f5 18       		.uleb128 0x18
 1667 00f6 9742     		.uleb128 0x2117
 1668 00f8 19       		.uleb128 0x19
 1669 00f9 01       		.uleb128 0x1
 1670 00fa 13       		.uleb128 0x13
 1671 00fb 00       		.byte	0
 1672 00fc 00       		.byte	0
 1673 00fd 10       		.uleb128 0x10
 1674 00fe 34       		.uleb128 0x34
 1675 00ff 00       		.byte	0
 1676 0100 03       		.uleb128 0x3
 1677 0101 0E       		.uleb128 0xe
 1678 0102 3A       		.uleb128 0x3a
 1679 0103 0B       		.uleb128 0xb
 1680 0104 3B       		.uleb128 0x3b
 1681 0105 05       		.uleb128 0x5
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 51


 1682 0106 49       		.uleb128 0x49
 1683 0107 13       		.uleb128 0x13
 1684 0108 02       		.uleb128 0x2
 1685 0109 18       		.uleb128 0x18
 1686 010a 00       		.byte	0
 1687 010b 00       		.byte	0
 1688 010c 11       		.uleb128 0x11
 1689 010d 34       		.uleb128 0x34
 1690 010e 00       		.byte	0
 1691 010f 03       		.uleb128 0x3
 1692 0110 0E       		.uleb128 0xe
 1693 0111 3A       		.uleb128 0x3a
 1694 0112 0B       		.uleb128 0xb
 1695 0113 3B       		.uleb128 0x3b
 1696 0114 05       		.uleb128 0x5
 1697 0115 49       		.uleb128 0x49
 1698 0116 13       		.uleb128 0x13
 1699 0117 02       		.uleb128 0x2
 1700 0118 17       		.uleb128 0x17
 1701 0119 00       		.byte	0
 1702 011a 00       		.byte	0
 1703 011b 12       		.uleb128 0x12
 1704 011c 05       		.uleb128 0x5
 1705 011d 00       		.byte	0
 1706 011e 03       		.uleb128 0x3
 1707 011f 0E       		.uleb128 0xe
 1708 0120 3A       		.uleb128 0x3a
 1709 0121 0B       		.uleb128 0xb
 1710 0122 3B       		.uleb128 0x3b
 1711 0123 05       		.uleb128 0x5
 1712 0124 49       		.uleb128 0x49
 1713 0125 13       		.uleb128 0x13
 1714 0126 02       		.uleb128 0x2
 1715 0127 17       		.uleb128 0x17
 1716 0128 00       		.byte	0
 1717 0129 00       		.byte	0
 1718 012a 13       		.uleb128 0x13
 1719 012b 0F       		.uleb128 0xf
 1720 012c 00       		.byte	0
 1721 012d 0B       		.uleb128 0xb
 1722 012e 0B       		.uleb128 0xb
 1723 012f 49       		.uleb128 0x49
 1724 0130 13       		.uleb128 0x13
 1725 0131 00       		.byte	0
 1726 0132 00       		.byte	0
 1727 0133 14       		.uleb128 0x14
 1728 0134 26       		.uleb128 0x26
 1729 0135 00       		.byte	0
 1730 0136 49       		.uleb128 0x49
 1731 0137 13       		.uleb128 0x13
 1732 0138 00       		.byte	0
 1733 0139 00       		.byte	0
 1734 013a 15       		.uleb128 0x15
 1735 013b 34       		.uleb128 0x34
 1736 013c 00       		.byte	0
 1737 013d 03       		.uleb128 0x3
 1738 013e 0E       		.uleb128 0xe
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 52


 1739 013f 3A       		.uleb128 0x3a
 1740 0140 0B       		.uleb128 0xb
 1741 0141 3B       		.uleb128 0x3b
 1742 0142 0B       		.uleb128 0xb
 1743 0143 49       		.uleb128 0x49
 1744 0144 13       		.uleb128 0x13
 1745 0145 3F       		.uleb128 0x3f
 1746 0146 19       		.uleb128 0x19
 1747 0147 02       		.uleb128 0x2
 1748 0148 18       		.uleb128 0x18
 1749 0149 00       		.byte	0
 1750 014a 00       		.byte	0
 1751 014b 16       		.uleb128 0x16
 1752 014c 2E       		.uleb128 0x2e
 1753 014d 00       		.byte	0
 1754 014e 3F       		.uleb128 0x3f
 1755 014f 19       		.uleb128 0x19
 1756 0150 3C       		.uleb128 0x3c
 1757 0151 19       		.uleb128 0x19
 1758 0152 6E       		.uleb128 0x6e
 1759 0153 0E       		.uleb128 0xe
 1760 0154 03       		.uleb128 0x3
 1761 0155 0E       		.uleb128 0xe
 1762 0156 3A       		.uleb128 0x3a
 1763 0157 0B       		.uleb128 0xb
 1764 0158 3B       		.uleb128 0x3b
 1765 0159 0B       		.uleb128 0xb
 1766 015a 00       		.byte	0
 1767 015b 00       		.byte	0
 1768 015c 00       		.byte	0
 1769              		.section	.debug_loc,"",%progbits
 1770              	.Ldebug_loc0:
 1771              	.LLST0:
 1772 0000 06000000 		.4byte	.LVL0
 1773 0004 2B000000 		.4byte	.LVL1-1
 1774 0008 0100     		.2byte	0x1
 1775 000a 50       		.byte	0x50
 1776 000b 00000000 		.4byte	0
 1777 000f 00000000 		.4byte	0
 1778              	.LLST1:
 1779 0013 06000000 		.4byte	.LVL3
 1780 0017 1B000000 		.4byte	.LVL4-1
 1781 001b 0100     		.2byte	0x1
 1782 001d 50       		.byte	0x50
 1783 001e 00000000 		.4byte	0
 1784 0022 00000000 		.4byte	0
 1785              	.LLST2:
 1786 0026 06000000 		.4byte	.LVL13
 1787 002a 0E000000 		.4byte	.LVL14
 1788 002e 0100     		.2byte	0x1
 1789 0030 53       		.byte	0x53
 1790 0031 12000000 		.4byte	.LVL15
 1791 0035 16000000 		.4byte	.LVL16
 1792 0039 0100     		.2byte	0x1
 1793 003b 53       		.byte	0x53
 1794 003c 18000000 		.4byte	.LVL17
 1795 0040 20000000 		.4byte	.LFE17
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 53


 1796 0044 0100     		.2byte	0x1
 1797 0046 50       		.byte	0x50
 1798 0047 00000000 		.4byte	0
 1799 004b 00000000 		.4byte	0
 1800              	.LLST3:
 1801 004f 06000000 		.4byte	.LVL18
 1802 0053 2D000000 		.4byte	.LVL19-1
 1803 0057 0100     		.2byte	0x1
 1804 0059 50       		.byte	0x50
 1805 005a 00000000 		.4byte	0
 1806 005e 00000000 		.4byte	0
 1807              	.LLST4:
 1808 0062 00000000 		.4byte	.LVL20
 1809 0066 0A000000 		.4byte	.LVL22
 1810 006a 0100     		.2byte	0x1
 1811 006c 50       		.byte	0x50
 1812 006d 0A000000 		.4byte	.LVL22
 1813 0071 1E000000 		.4byte	.LVL30
 1814 0075 0100     		.2byte	0x1
 1815 0077 56       		.byte	0x56
 1816 0078 1E000000 		.4byte	.LVL30
 1817 007c 20000000 		.4byte	.LFE20
 1818 0080 0400     		.2byte	0x4
 1819 0082 F3       		.byte	0xf3
 1820 0083 01       		.uleb128 0x1
 1821 0084 50       		.byte	0x50
 1822 0085 9F       		.byte	0x9f
 1823 0086 00000000 		.4byte	0
 1824 008a 00000000 		.4byte	0
 1825              	.LLST5:
 1826 008e 00000000 		.4byte	.LVL20
 1827 0092 0A000000 		.4byte	.LVL22
 1828 0096 0100     		.2byte	0x1
 1829 0098 51       		.byte	0x51
 1830 0099 0A000000 		.4byte	.LVL22
 1831 009d 18000000 		.4byte	.LVL26
 1832 00a1 0100     		.2byte	0x1
 1833 00a3 54       		.byte	0x54
 1834 00a4 1A000000 		.4byte	.LVL27
 1835 00a8 1E000000 		.4byte	.LVL28
 1836 00ac 0100     		.2byte	0x1
 1837 00ae 54       		.byte	0x54
 1838 00af 00000000 		.4byte	0
 1839 00b3 00000000 		.4byte	0
 1840              	.LLST6:
 1841 00b7 06000000 		.4byte	.LVL21
 1842 00bb 0A000000 		.4byte	.LVL22
 1843 00bf 0200     		.2byte	0x2
 1844 00c1 30       		.byte	0x30
 1845 00c2 9F       		.byte	0x9f
 1846 00c3 0A000000 		.4byte	.LVL22
 1847 00c7 14000000 		.4byte	.LVL24
 1848 00cb 0100     		.2byte	0x1
 1849 00cd 55       		.byte	0x55
 1850 00ce 16000000 		.4byte	.LVL25
 1851 00d2 1E000000 		.4byte	.LVL29
 1852 00d6 0100     		.2byte	0x1
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 54


 1853 00d8 55       		.byte	0x55
 1854 00d9 00000000 		.4byte	0
 1855 00dd 00000000 		.4byte	0
 1856              	.LLST7:
 1857 00e1 14000000 		.4byte	.LVL31
 1858 00e5 3B000000 		.4byte	.LVL32-1
 1859 00e9 0100     		.2byte	0x1
 1860 00eb 50       		.byte	0x50
 1861 00ec 00000000 		.4byte	0
 1862 00f0 00000000 		.4byte	0
 1863              	.LLST8:
 1864 00f4 04000000 		.4byte	.LVL39
 1865 00f8 0A000000 		.4byte	.LVL40
 1866 00fc 0100     		.2byte	0x1
 1867 00fe 53       		.byte	0x53
 1868 00ff 0A000000 		.4byte	.LVL40
 1869 0103 18000000 		.4byte	.LFE25
 1870 0107 0100     		.2byte	0x1
 1871 0109 50       		.byte	0x50
 1872 010a 00000000 		.4byte	0
 1873 010e 00000000 		.4byte	0
 1874              		.section	.debug_aranges,"",%progbits
 1875 0000 D4000000 		.4byte	0xd4
 1876 0004 0200     		.2byte	0x2
 1877 0006 00000000 		.4byte	.Ldebug_info0
 1878 000a 04       		.byte	0x4
 1879 000b 00       		.byte	0
 1880 000c 0000     		.2byte	0
 1881 000e 0000     		.2byte	0
 1882 0010 00000000 		.4byte	.LFB3
 1883 0014 40000000 		.4byte	.LFE3-.LFB3
 1884 0018 00000000 		.4byte	.LFB5
 1885 001c 2C000000 		.4byte	.LFE5-.LFB5
 1886 0020 00000000 		.4byte	.LFB6
 1887 0024 02000000 		.4byte	.LFE6-.LFB6
 1888 0028 00000000 		.4byte	.LFB7
 1889 002c 02000000 		.4byte	.LFE7-.LFB7
 1890 0030 00000000 		.4byte	.LFB8
 1891 0034 02000000 		.4byte	.LFE8-.LFB8
 1892 0038 00000000 		.4byte	.LFB9
 1893 003c 02000000 		.4byte	.LFE9-.LFB9
 1894 0040 00000000 		.4byte	.LFB10
 1895 0044 0C000000 		.4byte	.LFE10-.LFB10
 1896 0048 00000000 		.4byte	.LFB11
 1897 004c 0C000000 		.4byte	.LFE11-.LFB11
 1898 0050 00000000 		.4byte	.LFB12
 1899 0054 0C000000 		.4byte	.LFE12-.LFB12
 1900 0058 00000000 		.4byte	.LFB13
 1901 005c 0C000000 		.4byte	.LFE13-.LFB13
 1902 0060 00000000 		.4byte	.LFB14
 1903 0064 18000000 		.4byte	.LFE14-.LFB14
 1904 0068 00000000 		.4byte	.LFB15
 1905 006c 0C000000 		.4byte	.LFE15-.LFB15
 1906 0070 00000000 		.4byte	.LFB16
 1907 0074 14000000 		.4byte	.LFE16-.LFB16
 1908 0078 00000000 		.4byte	.LFB17
 1909 007c 20000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 55


 1910 0080 00000000 		.4byte	.LFB18
 1911 0084 18000000 		.4byte	.LFE18-.LFB18
 1912 0088 00000000 		.4byte	.LFB19
 1913 008c 38000000 		.4byte	.LFE19-.LFB19
 1914 0090 00000000 		.4byte	.LFB20
 1915 0094 20000000 		.4byte	.LFE20-.LFB20
 1916 0098 00000000 		.4byte	.LFB21
 1917 009c 50000000 		.4byte	.LFE21-.LFB21
 1918 00a0 00000000 		.4byte	.LFB2
 1919 00a4 2C000000 		.4byte	.LFE2-.LFB2
 1920 00a8 00000000 		.4byte	.LFB4
 1921 00ac 20000000 		.4byte	.LFE4-.LFB4
 1922 00b0 00000000 		.4byte	.LFB22
 1923 00b4 02000000 		.4byte	.LFE22-.LFB22
 1924 00b8 00000000 		.4byte	.LFB23
 1925 00bc 02000000 		.4byte	.LFE23-.LFB23
 1926 00c0 00000000 		.4byte	.LFB24
 1927 00c4 18000000 		.4byte	.LFE24-.LFB24
 1928 00c8 00000000 		.4byte	.LFB25
 1929 00cc 18000000 		.4byte	.LFE25-.LFB25
 1930 00d0 00000000 		.4byte	0
 1931 00d4 00000000 		.4byte	0
 1932              		.section	.debug_ranges,"",%progbits
 1933              	.Ldebug_ranges0:
 1934 0000 00000000 		.4byte	.LFB3
 1935 0004 40000000 		.4byte	.LFE3
 1936 0008 00000000 		.4byte	.LFB5
 1937 000c 2C000000 		.4byte	.LFE5
 1938 0010 00000000 		.4byte	.LFB6
 1939 0014 02000000 		.4byte	.LFE6
 1940 0018 00000000 		.4byte	.LFB7
 1941 001c 02000000 		.4byte	.LFE7
 1942 0020 00000000 		.4byte	.LFB8
 1943 0024 02000000 		.4byte	.LFE8
 1944 0028 00000000 		.4byte	.LFB9
 1945 002c 02000000 		.4byte	.LFE9
 1946 0030 00000000 		.4byte	.LFB10
 1947 0034 0C000000 		.4byte	.LFE10
 1948 0038 00000000 		.4byte	.LFB11
 1949 003c 0C000000 		.4byte	.LFE11
 1950 0040 00000000 		.4byte	.LFB12
 1951 0044 0C000000 		.4byte	.LFE12
 1952 0048 00000000 		.4byte	.LFB13
 1953 004c 0C000000 		.4byte	.LFE13
 1954 0050 00000000 		.4byte	.LFB14
 1955 0054 18000000 		.4byte	.LFE14
 1956 0058 00000000 		.4byte	.LFB15
 1957 005c 0C000000 		.4byte	.LFE15
 1958 0060 00000000 		.4byte	.LFB16
 1959 0064 14000000 		.4byte	.LFE16
 1960 0068 00000000 		.4byte	.LFB17
 1961 006c 20000000 		.4byte	.LFE17
 1962 0070 00000000 		.4byte	.LFB18
 1963 0074 18000000 		.4byte	.LFE18
 1964 0078 00000000 		.4byte	.LFB19
 1965 007c 38000000 		.4byte	.LFE19
 1966 0080 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 56


 1967 0084 20000000 		.4byte	.LFE20
 1968 0088 00000000 		.4byte	.LFB21
 1969 008c 50000000 		.4byte	.LFE21
 1970 0090 00000000 		.4byte	.LFB2
 1971 0094 2C000000 		.4byte	.LFE2
 1972 0098 00000000 		.4byte	.LFB4
 1973 009c 20000000 		.4byte	.LFE4
 1974 00a0 00000000 		.4byte	.LFB22
 1975 00a4 02000000 		.4byte	.LFE22
 1976 00a8 00000000 		.4byte	.LFB23
 1977 00ac 02000000 		.4byte	.LFE23
 1978 00b0 00000000 		.4byte	.LFB24
 1979 00b4 18000000 		.4byte	.LFE24
 1980 00b8 00000000 		.4byte	.LFB25
 1981 00bc 18000000 		.4byte	.LFE25
 1982 00c0 00000000 		.4byte	0
 1983 00c4 00000000 		.4byte	0
 1984              		.section	.debug_line,"",%progbits
 1985              	.Ldebug_line0:
 1986 0000 5A020000 		.section	.debug_str,"MS",%progbits,1
 1986      02005F00 
 1986      00000201 
 1986      FB0E0D00 
 1986      01010101 
 1987              	.LASF15:
 1988 0000 72656731 		.ascii	"reg16\000"
 1988      3600
 1989              	.LASF56:
 1990 0006 5350494D 		.ascii	"SPIM_IntClock_StartEx\000"
 1990      5F496E74 
 1990      436C6F63 
 1990      6B5F5374 
 1990      61727445 
 1991              	.LASF31:
 1992 001c 5350494D 		.ascii	"SPIM_WriteTxData\000"
 1992      5F577269 
 1992      74655478 
 1992      44617461 
 1992      00
 1993              	.LASF18:
 1994 002d 5350494D 		.ascii	"SPIM_Enable\000"
 1994      5F456E61 
 1994      626C6500 
 1995              	.LASF19:
 1996 0039 5350494D 		.ascii	"SPIM_Stop\000"
 1996      5F53746F 
 1996      7000
 1997              	.LASF57:
 1998 0043 5350494D 		.ascii	"SPIM_IntClock_Stop\000"
 1998      5F496E74 
 1998      436C6F63 
 1998      6B5F5374 
 1998      6F7000
 1999              	.LASF32:
 2000 0056 74784461 		.ascii	"txData\000"
 2000      746100
 2001              	.LASF3:
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 57


 2002 005d 73686F72 		.ascii	"short unsigned int\000"
 2002      7420756E 
 2002      7369676E 
 2002      65642069 
 2002      6E7400
 2003              	.LASF13:
 2004 0070 63686172 		.ascii	"char\000"
 2004      00
 2005              	.LASF49:
 2006 0075 5350494D 		.ascii	"SPIM_SetInterruptMode\000"
 2006      5F536574 
 2006      496E7465 
 2006      72727570 
 2006      744D6F64 
 2007              	.LASF26:
 2008 008b 5350494D 		.ascii	"SPIM_SetRxInterruptMode\000"
 2008      5F536574 
 2008      5278496E 
 2008      74657272 
 2008      7570744D 
 2009              	.LASF51:
 2010 00a3 5350494D 		.ascii	"SPIM_initVar\000"
 2010      5F696E69 
 2010      74566172 
 2010      00
 2011              	.LASF34:
 2012 00b0 72784461 		.ascii	"rxData\000"
 2012      746100
 2013              	.LASF48:
 2014 00b7 5350494D 		.ascii	"SPIM_DisableInt\000"
 2014      5F446973 
 2014      61626C65 
 2014      496E7400 
 2015              	.LASF59:
 2016 00c7 47656E65 		.ascii	"Generated_Source\\PSoC4\\SPIM.c\000"
 2016      72617465 
 2016      645F536F 
 2016      75726365 
 2016      5C50536F 
 2017              	.LASF11:
 2018 00e5 666C6F61 		.ascii	"float\000"
 2018      7400
 2019              	.LASF7:
 2020 00eb 6C6F6E67 		.ascii	"long long unsigned int\000"
 2020      206C6F6E 
 2020      6720756E 
 2020      7369676E 
 2020      65642069 
 2021              	.LASF36:
 2022 0102 73697A65 		.ascii	"size\000"
 2022      00
 2023              	.LASF37:
 2024 0107 5350494D 		.ascii	"SPIM_GetTxBufferSize\000"
 2024      5F476574 
 2024      54784275 
 2024      66666572 
 2024      53697A65 
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 58


 2025              	.LASF14:
 2026 011c 72656738 		.ascii	"reg8\000"
 2026      00
 2027              	.LASF21:
 2028 0121 5350494D 		.ascii	"SPIM_EnableTxInt\000"
 2028      5F456E61 
 2028      626C6554 
 2028      78496E74 
 2028      00
 2029              	.LASF5:
 2030 0132 6C6F6E67 		.ascii	"long unsigned int\000"
 2030      20756E73 
 2030      69676E65 
 2030      6420696E 
 2030      7400
 2031              	.LASF9:
 2032 0144 75696E74 		.ascii	"uint8\000"
 2032      3800
 2033              	.LASF40:
 2034 014a 5350494D 		.ascii	"SPIM_PutArray\000"
 2034      5F507574 
 2034      41727261 
 2034      7900
 2035              	.LASF20:
 2036 0158 656E6162 		.ascii	"enableInterrupts\000"
 2036      6C65496E 
 2036      74657272 
 2036      75707473 
 2036      00
 2037              	.LASF33:
 2038 0169 5350494D 		.ascii	"SPIM_ReadRxData\000"
 2038      5F526561 
 2038      64527844 
 2038      61746100 
 2039              	.LASF1:
 2040 0179 756E7369 		.ascii	"unsigned char\000"
 2040      676E6564 
 2040      20636861 
 2040      7200
 2041              	.LASF23:
 2042 0187 5350494D 		.ascii	"SPIM_DisableTxInt\000"
 2042      5F446973 
 2042      61626C65 
 2042      5478496E 
 2042      7400
 2043              	.LASF12:
 2044 0199 646F7562 		.ascii	"double\000"
 2044      6C6500
 2045              	.LASF47:
 2046 01a0 5350494D 		.ascii	"SPIM_EnableInt\000"
 2046      5F456E61 
 2046      626C6549 
 2046      6E7400
 2047              	.LASF27:
 2048 01af 696E7453 		.ascii	"intSrc\000"
 2048      726300
 2049              	.LASF53:
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 59


 2050 01b6 5350494D 		.ascii	"SPIM_swStatusRx\000"
 2050      5F737753 
 2050      74617475 
 2050      73527800 
 2051              	.LASF35:
 2052 01c6 5350494D 		.ascii	"SPIM_GetRxBufferSize\000"
 2052      5F476574 
 2052      52784275 
 2052      66666572 
 2052      53697A65 
 2053              	.LASF10:
 2054 01db 75696E74 		.ascii	"uint16\000"
 2054      313600
 2055              	.LASF25:
 2056 01e2 5350494D 		.ascii	"SPIM_SetTxInterruptMode\000"
 2056      5F536574 
 2056      5478496E 
 2056      74657272 
 2056      7570744D 
 2057              	.LASF54:
 2058 01fa 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2058      74657243 
 2058      72697469 
 2058      63616C53 
 2058      65637469 
 2059              	.LASF8:
 2060 0211 756E7369 		.ascii	"unsigned int\000"
 2060      676E6564 
 2060      20696E74 
 2060      00
 2061              	.LASF55:
 2062 021e 43794578 		.ascii	"CyExitCriticalSection\000"
 2062      69744372 
 2062      69746963 
 2062      616C5365 
 2062      6374696F 
 2063              	.LASF42:
 2064 0234 62797465 		.ascii	"byteCount\000"
 2064      436F756E 
 2064      7400
 2065              	.LASF30:
 2066 023e 5350494D 		.ascii	"SPIM_ReadRxStatus\000"
 2066      5F526561 
 2066      64527853 
 2066      74617475 
 2066      7300
 2067              	.LASF43:
 2068 0250 62756649 		.ascii	"bufIndex\000"
 2068      6E646578 
 2068      00
 2069              	.LASF60:
 2070 0259 433A5C55 		.ascii	"C:\\Users\\rad1an\\Downloads\\psoc-1-opyr_husiev\\L"
 2070      73657273 
 2070      5C726164 
 2070      31616E5C 
 2070      446F776E 
 2071 0287 61625F32 		.ascii	"ab_2_7SEG.cydsn\000"
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 60


 2071      5F375345 
 2071      472E6379 
 2071      64736E00 
 2072              	.LASF58:
 2073 0297 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2073      43313120 
 2073      352E342E 
 2073      31203230 
 2073      31363036 
 2074 02ca 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2074      20726576 
 2074      6973696F 
 2074      6E203233 
 2074      37373135 
 2075 02fd 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2075      66756E63 
 2075      74696F6E 
 2075      2D736563 
 2075      74696F6E 
 2076              	.LASF17:
 2077 0325 73697A65 		.ascii	"sizetype\000"
 2077      74797065 
 2077      00
 2078              	.LASF6:
 2079 032e 6C6F6E67 		.ascii	"long long int\000"
 2079      206C6F6E 
 2079      6720696E 
 2079      7400
 2080              	.LASF45:
 2081 033c 5350494D 		.ascii	"SPIM_Init\000"
 2081      5F496E69 
 2081      7400
 2082              	.LASF44:
 2083 0346 5350494D 		.ascii	"SPIM_ClearFIFO\000"
 2083      5F436C65 
 2083      61724649 
 2083      464F00
 2084              	.LASF38:
 2085 0355 5350494D 		.ascii	"SPIM_ClearRxBuffer\000"
 2085      5F436C65 
 2085      61725278 
 2085      42756666 
 2085      657200
 2086              	.LASF2:
 2087 0368 73686F72 		.ascii	"short int\000"
 2087      7420696E 
 2087      7400
 2088              	.LASF39:
 2089 0372 5350494D 		.ascii	"SPIM_ClearTxBuffer\000"
 2089      5F436C65 
 2089      61725478 
 2089      42756666 
 2089      657200
 2090              	.LASF41:
 2091 0385 62756666 		.ascii	"buffer\000"
 2091      657200
 2092              	.LASF50:
ARM GAS  C:\Users\rad1an\AppData\Local\Temp\ccSanu6n.s 			page 61


 2093 038c 5350494D 		.ascii	"SPIM_ReadStatus\000"
 2093      5F526561 
 2093      64537461 
 2093      74757300 
 2094              	.LASF52:
 2095 039c 5350494D 		.ascii	"SPIM_swStatusTx\000"
 2095      5F737753 
 2095      74617475 
 2095      73547800 
 2096              	.LASF22:
 2097 03ac 5350494D 		.ascii	"SPIM_EnableRxInt\000"
 2097      5F456E61 
 2097      626C6552 
 2097      78496E74 
 2097      00
 2098              	.LASF4:
 2099 03bd 6C6F6E67 		.ascii	"long int\000"
 2099      20696E74 
 2099      00
 2100              	.LASF28:
 2101 03c6 746D7053 		.ascii	"tmpStatus\000"
 2101      74617475 
 2101      7300
 2102              	.LASF16:
 2103 03d0 6C6F6E67 		.ascii	"long double\000"
 2103      20646F75 
 2103      626C6500 
 2104              	.LASF0:
 2105 03dc 7369676E 		.ascii	"signed char\000"
 2105      65642063 
 2105      68617200 
 2106              	.LASF46:
 2107 03e8 5350494D 		.ascii	"SPIM_Start\000"
 2107      5F537461 
 2107      727400
 2108              	.LASF29:
 2109 03f3 5350494D 		.ascii	"SPIM_ReadTxStatus\000"
 2109      5F526561 
 2109      64547853 
 2109      74617475 
 2109      7300
 2110              	.LASF24:
 2111 0405 5350494D 		.ascii	"SPIM_DisableRxInt\000"
 2111      5F446973 
 2111      61626C65 
 2111      5278496E 
 2111      7400
 2112              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
